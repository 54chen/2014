<?xml version="1.0" encoding="UTF-8"?>
  <rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
      <channel>
          <description><![CDATA[五四陈科学院]]></description>
          <title><![CDATA[五四陈科学院]]></title>
          <link>https://www.54chen.com/</link>
          <pubDate>2017-12-29T18:10:29+08:00</pubDate>
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p><img src=http://img03.taobaocdn.com/imgextra/i3/T13gR3Xa4cXXcFX9c3_050845.jpg></p>
  
  <p>2017年，小视频分享成为风口的小猪，人工智能大行其道，然而并未见到什么特别的效果，所有最有意义的都在于推荐。</p>
  
  <p>手机方面，因为人脸解锁的流行，看上去第一次让深度学习的东西落了地。</p>
  
  <p>业务方面，国内似乎已经慢了，各大厂家纷纷出海，印度、印尼成了新的“”。</p>
  
  <p>另外，传统业务新零售热起来了。</p>
  
  <!--more-->
  
  
  <h2>展望2018，可能会有以下十件大事</h2>
  
  <p>1.明年将会是科技企业海外IPO的集中年。</p>
  
  <p>2.人民日益增长的物质文化需要会导致继续出现人性丑陋的事件。</p>
  
  <p>3.企业海外开花，主战场移动到印度印尼。</p>
  
  <p>4.类似线上抓娃娃机的项目继续兴起。</p>
  
  <p>5.AI开始落地。</p>
  
  <p>6.房价可能会冷却到下半年后大涨。</p>
  
  <p>7.更加封闭，不论是网络还是经济。</p>
  
  <p>8.CRS影响基本悄无声息。</p>
  
  <p>9.python更加流行。</p>
  
  <p>10.人民币进入7时代。</p>
  
  <h2>2017预测回顾</h2>
  
  <p>1.国内污染比2016更加严重且封口更紧。- 准，帝都附近受北风影响，似乎是好点的。</p>
  
  <p>2.公共安全事件再一次出现。- 准，杭州保姆纵火案，别以为不是公共安全事件，涉及所有消防、物业，不敢多想。</p>
  
  <p>3.微信支付在国内全方位超越支付宝。- 一般准，没有全方位，至少是大范围。</p>
  
  <p>4.小米生态链企业要雄起一两个（出名或者IPO）。- 准，紫米和华米 都挺出名了。</p>
  
  <p>5.人工智能的项目依旧不产生实际超大收益。- 准。</p>
  
  <p>6.电子支付开始作为大鱼抢占的关键制高点。- 一般准。</p>
  
  <p>7.开始有国产手机厂商关门或被并购。- 准，乐视手机。</p>
  
  <p>8.直播行业常态化，变成所有应用都有的功能，收益下滑。- 准</p>
  
  <p>9.云公司推出人工智能平台。- 准</p>
  
  <p>10.人民币到7.2。- 差点准，这个太难了。</p>
  
  <p>明年见！</p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[54chen的2017总结和2018预测]]></title>
              <link>https://www.54chen.com/blog/2017/12/29/2017-2018/</link>
              <pubDate>2017-12-29T16:23:10+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2017/12/29/2017-2018</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>由于上个月推出第一篇《生娃指北》<a href="https://www.54chen.com/blog/2017/07/14/born-in-beijing/">https://www.54chen.com/blog/2017/07/14/born-in-beijing/</a> 后，收到了广大人民群众的反馈，特更新第二篇－采购篇。</p>
  
  <p><img src=http://img02.taobaocdn.com/imgextra/i2/T1a5J6XmhtXXbWyPE9_103845.jpg width=200></p>
  
  <!--more-->
  
  
  <p>看表</p>
  
  <table>
  <thead>
  <tr>
  <th> 物品名        </th>
  <th style="text-align:center;"> 品牌名        </th>
  <th style="text-align:right;"> 备注  </th>
  </tr>
  </thead>
  <tbody>
  <tr>
  <td> 奶瓶150ml     </td>
  <td style="text-align:center;">    comotomo   </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 玻璃奶瓶150ml </td>
  <td style="text-align:center;">    betta      </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 塑料250ml     </td>
  <td style="text-align:center;">    betta      </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 宽口奶瓶250ml </td>
  <td style="text-align:center;">   布朗博士    </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 宽口奶瓶150ml </td>
  <td style="text-align:center;">   布朗博士    </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 婴儿车        </td>
  <td style="text-align:center;">   SilverCross </td>
  <td style="text-align:right;"> 大气好用，主流车型</td>
  </tr>
  <tr>
  <td> 婴儿车        </td>
  <td style="text-align:center;">   好孩子口袋车</td>
  <td style="text-align:right;"> 折起来很小，但是还没用过就送人了</td>
  </tr>
  <tr>
  <td> 婴儿车        </td>
  <td style="text-align:center;">   quintus伞车 </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 奶粉          </td>
  <td style="text-align:center;">德国爱他美白金版一段</td>
  <td style="text-align:right;"> 出生入量不如喝了两次</td>
  </tr>
  <tr>
  <td> 沐浴露        </td>
  <td style="text-align:center;">加州宝宝       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 保湿乳液      </td>
  <td style="text-align:center;">加州宝宝       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 驱蚊液        </td>
  <td style="text-align:center;">加州宝宝       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 抚触油        </td>
  <td style="text-align:center;">妙思乐         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 维生素D3      </td>
  <td style="text-align:center;"> Ddrops        </td>
  <td style="text-align:right;"> 母乳宝宝出生2周后开始补d3促进钙吸收      </td>
  </tr>
  <tr>
  <td> 西甲硅油      </td>
  <td style="text-align:center;">little remedies</td>
  <td style="text-align:right;"> 解决肠绞痛莫名哭闹放屁的      </td>
  </tr>
  <tr>
  <td> 盐水滴鼻剂    </td>
  <td style="text-align:center;">little remedies</td>
  <td style="text-align:right;"> 买了没用过      </td>
  </tr>
  <tr>
  <td> 乳钙          </td>
  <td style="text-align:center;">bioland        </td>
  <td style="text-align:right;"> 半岁前只吃D3,乳钙半岁后考虑吃      </td>
  </tr>
  <tr>
  <td> 安抚奶嘴×4    </td>
  <td style="text-align:center;">苏维妮         </td>
  <td style="text-align:right;"> 利器，必备      </td>
  </tr>
  <tr>
  <td> 安抚奶嘴链*1  </td>
  <td style="text-align:center;">苏维妮         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 指甲刀        </td>
  <td style="text-align:center;">苏维妮         </td>
  <td style="text-align:right;"> 从小剪指甲，否则自己抠自己      </td>
  </tr>
  <tr>
  <td> 梳子          </td>
  <td style="text-align:center;">苏维妮         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 餐具套装      </td>
  <td style="text-align:center;">苏维妮         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 勺子          </td>
  <td style="text-align:center;">苏维妮         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 安抚玩具      </td>
  <td style="text-align:center;"> jellycat邦尼兔、小熊 </td>
  <td style="text-align:right;"> 用处不大      </td>
  </tr>
  <tr>
  <td> 安抚巾 ×2     </td>
  <td style="text-align:center;">麦侬贝儿       </td>
  <td style="text-align:right;"> 流口水啃这个比啃手强      </td>
  </tr>
  <tr>
  <td> 婴儿床        </td>
  <td style="text-align:center;">可优比         </td>
  <td style="text-align:right;"> 早买散味      </td>
  </tr>
  <tr>
  <td> 餐椅          </td>
  <td style="text-align:center;">可优比         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 床垫          </td>
  <td style="text-align:center;">可优比         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 腰凳          </td>
  <td style="text-align:center;">可优比         </td>
  <td style="text-align:right;"> 能扶坐了才有用      </td>
  </tr>
  <tr>
  <td> 牙胶          </td>
  <td style="text-align:center;">苏维小鹿       </td>
  <td style="text-align:right;"> 不知道为啥，一咬就哭      </td>
  </tr>
  <tr>
  <td> 牙胶          </td>
  <td style="text-align:center;">banana         </td>
  <td style="text-align:right;"> 同上      </td>
  </tr>
  <tr>
  <td> 牙胶          </td>
  <td style="text-align:center;">comotomo×2     </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 保温壶        </td>
  <td style="text-align:center;">tiger          </td>
  <td style="text-align:right;"> 尚未启封      </td>
  </tr>
  <tr>
  <td> 耳温枪        </td>
  <td style="text-align:center;">博朗           </td>
  <td style="text-align:right;"> 慎用，不如传统水银温度计准，要高0.5度      </td>
  </tr>
  <tr>
  <td> 料理棒        </td>
  <td style="text-align:center;">博朗           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 洗衣液        </td>
  <td style="text-align:center;">佬甘尼克     </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 奶瓶清洁剂    </td>
  <td style="text-align:center;">佬甘尼克     </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 玩具清洁剂    </td>
  <td style="text-align:center;">佬甘尼克     </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 洗衣皂        </td>
  <td style="text-align:center;">韩宁       </td>
  <td style="text-align:right;">很好用，可以多买</td>
  </tr>
  <tr>
  <td> 湿纸巾×40     </td>
  <td style="text-align:center;">韩国顺顺儿     </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 护臀膏        </td>
  <td style="text-align:center;">地球妈妈       </td>
  <td style="text-align:right;">预防宝宝红PP</td>
  </tr>
  <tr>
  <td> 侧切喷雾      </td>
  <td style="text-align:center;">地球妈妈       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 鞣酸软膏      </td>
  <td style="text-align:center;">北医三院       </td>
  <td style="text-align:right;"> 宝宝容易淹脖子，大腿根，抹抹就好</td>
  </tr>
  <tr>
  <td> 痱子粉        </td>
  <td style="text-align:center;">和光堂         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 桃子水        </td>
  <td style="text-align:center;">贝亲           </td>
  <td style="text-align:right;"> 好用，点赞      </td>
  </tr>
  <tr>
  <td> 驱蚊器        </td>
  <td style="text-align:center;">vape           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 驱蚊贴        </td>
  <td style="text-align:center;">小合光堂     </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 紫草膏        </td>
  <td style="text-align:center;">小蜜蜂         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 消锅        </td>
  <td style="text-align:center;">小白熊         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 洗澡盆        </td>
  <td style="text-align:center;">stokke         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 纸尿裤        </td>
  <td style="text-align:center;">大王天使       </td>
  <td style="text-align:right;"> 大一点才能用拉拉裤，拉拉裤穿起来容易</td>
  </tr>
  <tr>
  <td> 拉拉裤        </td>
  <td style="text-align:center;">大王天使       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 连体衣×6      </td>
  <td style="text-align:center;">英氏           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 包被          </td>
  <td style="text-align:center;">英氏           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 奶瓶夹        </td>
  <td style="text-align:center;">英氏           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 袜子          </td>
  <td style="text-align:center;">英氏           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 上下衣×2      </td>
  <td style="text-align:center;">英氏           </td>
  <td style="text-align:right;">  千万不要买59cm，穿不了几天就小了，宝宝衣服大两码没关系     </td>
  </tr>
  <tr>
  <td> 绵柔巾        </td>
  <td style="text-align:center;">全棉时代       </td>
  <td style="text-align:right;">  搞活动多买     </td>
  </tr>
  <tr>
  <td> 纱布浴巾×2套  </td>
  <td style="text-align:center;">全棉时代       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 口水巾×2套    </td>
  <td style="text-align:center;">全棉时代       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 产褥垫×2包    </td>
  <td style="text-align:center;">全棉时代       </td>
  <td style="text-align:right;"> 医院其实有备      </td>
  </tr>
  <tr>
  <td> 一次性隔尿垫×2包</td>
  <td style="text-align:center;">全棉时代     </td>
  <td style="text-align:right;"> 同上      </td>
  </tr>
  <tr>
  <td> 一次性内裤×5包</td>
  <td style="text-align:center;">全棉时代       </td>
  <td style="text-align:right;"> 同上      </td>
  </tr>
  <tr>
  <td> 收腹缠带      </td>
  <td style="text-align:center;">全棉时代       </td>
  <td style="text-align:right;"> 没用      </td>
  </tr>
  <tr>
  <td> 防溢乳垫      </td>
  <td style="text-align:center;">全棉时代       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 棉签          </td>
  <td style="text-align:center;">棉花秘密       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 绵柔巾        </td>
  <td style="text-align:center;">棉花秘密       </td>
  <td style="text-align:right;"> 洗屁股用，没有全棉时代的好，掉絮      </td>
  </tr>
  <tr>
  <td> 防溢乳垫      </td>
  <td style="text-align:center;">棉花秘密       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 健身架        </td>
  <td style="text-align:center;">费雪           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 床铃          </td>
  <td style="text-align:center;">费雪           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 米兔早教机    </td>
  <td style="text-align:center;">小米           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 夜灯          </td>
  <td style="text-align:center;">小米           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 恒温水壶      </td>
  <td style="text-align:center;">小米           </td>
  <td style="text-align:right;">不冲奶粉，没什么用</td>
  </tr>
  <tr>
  <td> 宝宝晾衣架×25 </td>
  <td style="text-align:center;">淘宝           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 宝宝洗脸盆+屁屁盆</td>
  <td style="text-align:center;">淘宝        </td>
  <td style="text-align:right;">跟护士学会水龙头清洗后盆没什么用</td>
  </tr>
  <tr>
  <td> 围栏          </td>
  <td style="text-align:center;">ifam           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 回力车        </td>
  <td style="text-align:center;">B.toys         </td>
  <td style="text-align:right;">玩具       </td>
  </tr>
  <tr>
  <td> 跳跳大河马    </td>
  <td style="text-align:center;">B.toys         </td>
  <td style="text-align:right;">玩具       </td>
  </tr>
  <tr>
  <td> 拨浪鼓×2      </td>
  <td style="text-align:center;">hape           </td>
  <td style="text-align:right;">玩具       </td>
  </tr>
  <tr>
  <td> 哺乳枕        </td>
  <td style="text-align:center;">良良           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 凉席×2        </td>
  <td style="text-align:center;">良良           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 防吐垫        </td>
  <td style="text-align:center;">淘宝           </td>
  <td style="text-align:right;">一个斜三角形的垫子，娃躺上面是斜着的，不吐</td>
  </tr>
  <tr>
  <td> dha           </td>
  <td style="text-align:center;">挪威小鱼       </td>
  <td style="text-align:right;">如果妈妈吃，宝宝可半岁后在吃</td>
  </tr>
  <tr>
  <td> 妈妈营养片    </td>
  <td style="text-align:center;">swisse钙片、惠氏dha    佬新章维生素片</td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 安全座椅＋提篮</td>
  <td style="text-align:center;">cybex          </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 哺乳文胸      </td>
  <td style="text-align:center;">美德乐 、妈妈喂</td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 乳头霜        </td>
  <td style="text-align:center;">Lansinoh       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 吸奶器        </td>
  <td style="text-align:center;">Lansinoh       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 储奶袋        </td>
  <td style="text-align:center;">Lansinoh       </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 集奶器        </td>
  <td style="text-align:center;">淘宝           </td>
  <td style="text-align:right;">巨推荐，吸奶器不如这个 </td>
  </tr>
  <tr>
  <td> 婴儿理发器    </td>
  <td style="text-align:center;">好孩子         </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 宝宝护肚围    </td>
  <td style="text-align:center;">淘宝           </td>
  <td style="text-align:right;">就是一圈软布</td>
  </tr>
  <tr>
  <td> 保温箱        </td>
  <td style="text-align:center;">tgbox          </td>
  <td style="text-align:right;">用来运奶的</td>
  </tr>
  <tr>
  <td> 黑白卡、早教卡</td>
  <td style="text-align:center;">淘宝           </td>
  <td style="text-align:right;">       </td>
  </tr>
  <tr>
  <td> 尿布台        </td>
  <td style="text-align:center;">淘宝           </td>
  <td style="text-align:right;">没用   </td>
  </tr>
  <tr>
  <td> 手持吸尘器    </td>
  <td style="text-align:center;">戴森           </td>
  <td style="text-align:right;">有用，吸床</td>
  </tr>
  </tbody>
  </table>
  
  
  <ul>
  <li>以上由我夫人整理，54chen记录制表。</li>
  </ul>
  
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[生娃指北-采购篇]]></title>
              <link>https://www.54chen.com/blog/2017/08/22/born-in-beijing/</link>
              <pubDate>2017-08-22T11:10:50+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2017/08/22/born-in-beijing</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>This is a quick guide explaining how to run GUI app in docker on mac osx.</p>
  
  <p><img src=http://chen54.b0.upaiyun.com/1127/c10d_bg.jpg></p>
  
  <!--more-->
  
  
  <h2>step 1.install two important tools</h2>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#brew cask install xquartz</span>
  
  <span class="cp">#brew install socat</span></code></pre></div>
  
  
  <h2>step 2.run socat</h2>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">socat</span> <span class="n">TCP</span><span class="o">-</span><span class="nl">LISTEN</span><span class="p">:</span><span class="mi">6001</span><span class="p">,</span><span class="n">reuseaddr</span><span class="p">,</span><span class="n">fork</span> <span class="n">UNIX</span><span class="o">-</span><span class="nl">CLIENT</span><span class="p">:</span><span class="err">\</span><span class="s">&quot;$DISPLAY</span><span class="se">\&quot;</span><span class="s"> &amp;</span></code></pre></div>
  
  
  <h2>step 3.see what your real en* by ifconfig</h2>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#ifconfig</span></code></pre></div>
  
  
  <p>You can see en0 en1 en2 and so on,choose a right one which has the right IP addrass.</p>
  
  <p>step 4.run docker</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">docker</span> <span class="n">run</span> <span class="o">-</span><span class="n">it</span> <span class="o">-</span><span class="n">e</span> <span class="n">XAUTHORITY</span><span class="o">=/</span><span class="n">tmp</span><span class="o">/</span><span class="n">xauth</span> <span class="o">-</span><span class="n">v</span> <span class="o">~/</span><span class="p">.</span><span class="nl">Xauthority</span><span class="p">:</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="n">xauth</span> <span class="o">-</span><span class="n">e</span> <span class="n">DISPLAY</span><span class="o">=</span><span class="err">$</span><span class="p">(</span><span class="n">ifconfig</span> <span class="n">en3</span> <span class="o">|</span> <span class="n">grep</span> <span class="err">&#39;</span><span class="n">inet</span> <span class="err">&#39;</span><span class="o">|</span><span class="n">awk</span> <span class="err">&#39;</span><span class="p">{</span><span class="n">print</span> <span class="err">$</span><span class="mi">2</span><span class="p">}</span><span class="err">&#39;</span><span class="p">)</span><span class="o">:</span><span class="mi">1</span> <span class="o">--</span><span class="n">net</span> <span class="n">host</span> <span class="o">--</span><span class="n">volume</span><span class="o">=</span><span class="err">$</span><span class="p">(</span><span class="n">pwd</span><span class="p">)</span><span class="o">:/</span><span class="n">workspace</span> <span class="n">fastercnn</span> <span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">bash</span></code></pre></div>
  
  
  <p>attention: You must modify the DISPLAY,replace the &ldquo;ifconfig en*&rdquo; by the one which choosed in step 3.</p>
  
  <p>Good luck!</p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[How to run GUI app in docker on osx]]></title>
              <link>https://www.54chen.com/blog/2017/07/27/docker-gui-osx/</link>
              <pubDate>2017-07-27T10:11:29+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2017/07/27/docker-gui-osx</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>本篇纯属扯淡，技术性极高，学好社会流程之后，可以节省很多时间，也能有效减少被看不起的机会。</p>
  
  <p><img src=http://img02.taobaocdn.com/imgextra/i2/T1a5J6XmhtXXbWyPE9_103845.jpg width=200></p>
  
  <!--more-->
  
  
  <h2>生娃前</h2>
  
  <h3>名词解释</h3>
  
  <p>1.准生证</p>
  
  <p>这是俗称，自从放开二胎后，变名为《生育登记服务单》。这个高级，有官方网站 <a href="http://syz.bjchfp.">http://syz.bjchfp.</a> ，填写对了居委会就会给你打电话。完了你自己下载打印就可以了。</p>
  
  <p>2.母子健康档案（也有人叫做 建卡）</p>
  
  <p>由卫生主管的社区卫生服务中心（这TM是个事业单位吧？），他们资料后，给你媳妇发3个册子：《母子健康档案》、《儿童保健记录》俗称体检本（有些地方要等娃生了才给）、《儿童保健健康教育手册》这本基本没卵用。</p>
  
  <p>3.医院建档</p>
  
  <p>建档是指，你媳妇怀上了，决定要去哪个医院产检和生产，这个医院要同意，首先要建立档案，简称建档。</p>
  
  <h3>流程</h3>
  
  <p>step 1.想生个娃了，上网站登记，准备打印准生证。</p>
  
  <p>step 2.一不小心怀上了，且大于42天，注意42天！</p>
  
  <p>step 3.带上医院验血、B超之类的能证明怀了的（验孕试纸不行）东西，和各种身份证明（具体打电话问居委会问卫生服务中心），办理母子健康档案。</p>
  
  <p>step 4.带上母子健康档案，排队挂号OR牛&amp;金钱去你媳妇心宜的医院。</p>
  
  <p>step 5.为期十几次的产检后，生啦。</p>
  
  <h3>注意事项</h3>
  
  <p>step 1 里必须确定好居委会名称。</p>
  
  <p>step 2 里42天是很多社区的龟腚，小于这个时间人家懒得理你。</p>
  
  <p>step 3 人家会问你一堆的资料，提前打好电话。</p>
  
  <p>step 4 越好的医院，越不可以排队排到，牛是个不错的选择，但是不靠谱的牛更麻烦，因为错过了一两天，医院就满了，不收你了。三院顺产没有无痛。（感谢伟俊提供信息）</p>
  
  <p>step 5 产检排队很浪费时间，四维立体B超那个对医学来讲毛用没有，有医院靠这赚钱。</p>
  
  <p>社区疫苗建档环节，需要证件：母子健康档案（健康档案和疫苗建档不在一个地方的一定要办迁出，由健康档案发证的社区医院盖戳）、出生后第一次打卡介苗和乙肝的疫苗证明、居住证明（暂住证，房本，社区开具的居住证任一）、父母双方身份证。（感谢现奎提供信息）</p>
  
  <h2>生娃</h2>
  
  <h3>名词解释</h3>
  
  <p>1.预产期</p>
  
  <p>就是你媳妇怀孕时间到多久要生的时间，每回的B超单子上都有，一般来讲都有2个值，一个是B超观测的时间，一个是计算时间。一般来说，计算时间39周之后就可以生了，39周后是越早出来越安全（因为后面越长越大啦），41周再不出来，医生就要采取措施了。</p>
  
  <p>2.羊水早破</p>
  
  <p>好像是个医学名词吧，是一种很危险的情况，比如在家里出现这个情况，你家娃有在妈妈肚子里羊水提前破了，娃就有窒息的危险。所以说要医院离家近一点。</p>
  
  <p>3.入盆</p>
  
  <p>有经验的老医生摸一把就知道入了，入了之后，羊水早破的风险就低一些了，因为即使破了，羊水也不会流这么快，你家娃的头顶着的。</p>
  
  <p>4.母乳喂养</p>
  
  <p>一出生的娃第一件事情不是喂奶瓶，是吸妈妈的奶，对大人小孩都有帮助。另外，母乳喂养是社会可持续发展的关键。而且，还能省一大笔奶粉钱。</p>
  
  <p>5.疸</p>
  
  <p>生理性疸是一开始没有，过三四天出现，再过几天得不行，然后一两个星期就没了。没别的办法，多吃多拉多晒太阳。</p>
  
  <h3>注意事项</h3>
  
  <p>期间有很多次产检，公立医院可能会排队很长时间，私立医院是个不错的选择，和睦家什么的都可以在天猫上买618的价格还算是划算。</p>
  
  <p>预产期最后两个星期，家里一定要有多的人，不可留孕妇一人在家。</p>
  
  <p>三院人太多，顺的不给无痛。（感谢伟俊提供信息）</p>
  
  <h2>生娃后</h2>
  
  <h3>名词解释</h3>
  
  <p>1.出院诊断证明</p>
  
  <p>这个是医院的标准流程最后一环，一般住完院、付完钱，都会给出院诊断证明。</p>
  
  <p>2.出生证</p>
  
  <p>没错，就是传说中的出生证，一般出生后一个星期，医院都有专门的地方统一办。</p>
  
  <p>3.听力筛查单、卡介苗接种证、首针乙肝</p>
  
  <p>这三个，一般都是在孩子出生后当天和一周内，全部备齐了，打或者没打，都得给个纸条的。</p>
  
  <p>4.疫苗本</p>
  
  <p>绿片的，全称《免疫疫苗接种证》，一般是在社区卫生服务中心办理的，满1月时打第二针乙肝时就正好办了。</p>
  
  <h3>注意事项</h3>
  
  <p>因为之前你办过《母子健康档案》，所以社区卫生服务中心是有你记录的，他们看时间差不多了，你家应该生了，就会打你电话，然后让你去交本本。</p>
  
  <p>这里有个关键的地方，如果没有《儿童保健记录本》，以后上学的时候很麻烦（按目前看），所以一定要问社区要。</p>
  
  <p>昌平的做法，去办体检的时候，他们帮你保管了，如果你要去海淀，可以找他们自己再取出来。</p>
  
  <h2>娃生病</h2>
  
  <h3>注意事项</h3>
  
  <p>1.发烧</p>
  
  <p>半岁内的娃，发烧38.5是个界限，38.5以上，要用退热剂（泰诺林），38.5以下，用温水擦胳肢窝脖子四肢（隔个半小时擦一次就行了，别不停的擦）。</p>
  
  <p>建议不要一发烧就跑医院，目前大多数三甲医院被家长们烦死了，都把儿科急诊给关掉了。</p>
  
  <p>和睦家崔玉涛名医指点：发烧第三天再去医院。因为前几天验血都看不出来啥原因发的烧。</p>
  
  <p>2.睡前哭</p>
  
  <p>入睡困难，简单说是要快。当发现娃有要睡觉的意思了（揉眼睛、打呵欠），就弄他睡觉去。别等人家暗示了半天还在让人家不睡，后面又想睡觉又睡不着，宝宝心里不苦才怪。</p>
  
  <p>3.吐奶</p>
  
  <p>吐啊吐的就习惯了，4个月之前，都这个样子。能做的事情就是，吃完奶前半小时，别把他抱来抱去的，只保持一个姿势，拍咯。放肩上大人半躺到沙发，是个非常舒服的姿势。</p>
  
  <p>4.入量够不够</p>
  
  <p>看小便次数，一天小便十次以上且不，说明不饿了。</p>
  
  <p>5.洗澡</p>
  
  <p>新生儿多洗澡没坏处，天天洗都行，不要天天用沐浴露。网上找下婴儿抚触和排气视频，最有用的两项技能。</p>
  
  <p>[更新了 三院因为人太多顺产没有无痛 －伟俊提供信息 2017.7.17]</p>
  
  <p>[更新了 办理疫苗档案时需要的手续－现奎提供信息 2017.7.17]</p>
  
  <p>[长期持续更新，最后更新时间2017.7.17]</p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[生娃指北]]></title>
              <link>https://www.54chen.com/blog/2017/07/14/born-in-beijing/</link>
              <pubDate>2017-07-14T16:41:50+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2017/07/14/born-in-beijing</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>Caffe is a deep learning framework made with expression, speed, and modularity in mind. It is developed by Berkeley AI Research (BAIR) and by community contributors.</p>
  
  <p>The official website is <a href="http://caffe.berkeleyvision.org/">http://caffe.berkeleyvision.org/</a> .</p>
  
  <p>It is easy to install it with python 2 and Ubuntu.But it is hard to install it with python 3 and centOs.</p>
  
  <p><img src=http://chen54.b0.upaiyun.com/1127/c10d_bg.jpg></p>
  
  <!--more-->
  
  
  <p>Here are some records when I install it with Anaconda python3 on centos7.</p>
  
  <h2>Platform</h2>
  
  <p>Prior to installing, have a glance through this blog and take note of the details for your platform.</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="err">$</span><span class="n">cat</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">redhat</span><span class="o">-</span><span class="n">release</span>
  
  <span class="n">CentOS</span> <span class="n">Linux</span> <span class="n">release</span> <span class="mf">7.</span><span class="o">*.*</span> <span class="p">(</span><span class="n">Core</span><span class="p">)</span>
  
  <span class="err">$</span><span class="n">python</span> <span class="o">--</span><span class="n">version</span>
  
  <span class="n">Python</span> <span class="mf">3.4</span><span class="o">.</span><span class="mi">3</span> <span class="p">::</span> <span class="n">Anaconda</span> <span class="mf">2.3</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="mi">64</span><span class="o">-</span><span class="n">bit</span><span class="p">)</span>
  
  <span class="err">$</span><span class="n">pip</span> <span class="o">--</span><span class="n">version</span>
  
  <span class="n">pip</span> <span class="mf">7.0</span><span class="o">.</span><span class="mi">3</span> <span class="kn">from</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">work</span><span class="o">/</span><span class="n">anaconda3</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">python3</span><span class="o">.</span><span class="mi">4</span><span class="o">/</span><span class="n">site</span><span class="o">-</span><span class="n">packages</span> <span class="p">(</span><span class="n">python</span> <span class="mf">3.4</span><span class="p">)</span></code></pre></div>
  
  
  <h2>Dependencies</h2>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="err">$</span><span class="n">sudo</span> <span class="n">yum</span> <span class="n">install</span> <span class="n">gflags</span><span class="o">-</span><span class="n">devel</span> <span class="n">glog</span><span class="o">-</span><span class="n">devel</span> <span class="n">lmdb</span><span class="o">-</span><span class="n">devel</span> <span class="n">openblas</span><span class="o">-</span><span class="n">devel</span> <span class="n">leveldb</span><span class="o">-</span><span class="n">devel</span> <span class="n">snappy</span><span class="o">-</span><span class="n">devel</span> <span class="n">opencv</span><span class="o">-</span><span class="n">devel</span> <span class="n">hdf5</span><span class="o">-</span><span class="n">devel</span></code></pre></div>
  
  
  <h2>Python and boost Dependencies</h2>
  
  <p>Fist of all,download the dependencies.</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="err">$</span><span class="n">git</span> <span class="n">clone</span> <span class="o">--</span><span class="n">depth</span> <span class="mi">1</span> <span class="nl">https</span><span class="p">:</span><span class="c1">//github.com/BVLC/caffe.git</span>
  
  <span class="err">$</span><span class="n">wget</span> <span class="nl">http</span><span class="p">:</span><span class="c1">//sourceforge.net/projects/boost/files/boost/1.59.0/boost_1_59_0.tar.gz/download</span>
  
  <span class="err">$</span><span class="n">wget</span> <span class="err">&#39;</span><span class="nl">https</span><span class="p">:</span><span class="c1">//github.com//protobuf/releases/download/v3.3.0/protobuf-cpp-3.3.0.tar.gz&#39;</span>
  
  <span class="err">$</span><span class="n">wget</span> <span class="err">&#39;</span><span class="nl">https</span><span class="p">:</span><span class="c1">//github.com//protobuf/releases/download/v3.3.0/protobuf-python-3.3.0.tar.gz&#39;</span></code></pre></div>
  
  
  <p>Install the dependencies:</p>
  
  <p>1.python libs:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="err">$</span><span class="n">cd</span> <span class="n">caffe</span><span class="o">/</span><span class="n">python</span>
  
  <span class="err">$</span><span class="k">for</span> <span class="n">req</span> <span class="n">in</span> <span class="err">$</span><span class="p">(</span><span class="n">cat</span> <span class="n">requirements</span><span class="p">.</span><span class="n">txt</span><span class="p">)</span> <span class="n">pydot</span><span class="p">;</span> <span class="k">do</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">pip</span> <span class="n">install</span> <span class="err">$</span><span class="n">req</span> <span class="o">-</span><span class="n">i</span> <span class="nl">https</span><span class="p">:</span><span class="c1">//pypi.mirrors.ustc.edu.cn/simple; done</span></code></pre></div>
  
  
  <p>If you are not in China,remove the -i url parameter.</p>
  
  <p>2.pb libs:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="err">$</span><span class="n">cd</span> <span class="p">..</span><span class="o">/</span><span class="p">..;</span><span class="n">tar</span> <span class="n">zxvf</span> <span class="n">boost_1_59_0</span><span class="p">.</span><span class="n">tar</span><span class="p">.</span><span class="n">gz</span><span class="p">;</span><span class="n">tar</span> <span class="n">zxvf</span> <span class="n">protobuf</span><span class="o">-</span><span class="n">cpp</span><span class="o">-</span><span class="mf">3.3.0</span><span class="p">.</span><span class="n">tar</span><span class="p">.</span><span class="n">gz</span><span class="p">;</span><span class="n">tar</span> <span class="n">zxvf</span> <span class="n">protobuf</span><span class="o">-</span><span class="n">python</span><span class="o">-</span><span class="mf">3.3.0</span><span class="p">.</span><span class="n">tar</span><span class="p">.</span><span class="n">gz</span>
  
  <span class="err">$</span><span class="n">cd</span> <span class="n">protobuf</span><span class="o">-</span><span class="mf">3.3.0</span><span class="o">/</span>
  
  <span class="err">$</span><span class="p">.</span><span class="o">/</span><span class="n">configure</span>
  
  <span class="err">$</span><span class="n">make</span> <span class="o">&amp;&amp;</span> <span class="n">make</span> <span class="n">install</span>
  
  <span class="err">$</span><span class="n">cd</span> <span class="n">python</span><span class="o">/</span>
  
  <span class="err">$</span><span class="n">python</span> <span class="n">setup</span><span class="p">.</span><span class="n">py</span> <span class="n">build</span>
  
  <span class="err">$</span><span class="n">python</span> <span class="n">setup</span><span class="p">.</span><span class="n">py</span> <span class="n">install</span>
  
  <span class="err">$</span><span class="n">sudo</span> <span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">libprotobuf</span><span class="p">.</span><span class="n">so</span><span class="mf">.13.0.0</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">lib64</span><span class="o">/</span><span class="n">libprotobuf</span><span class="p">.</span><span class="n">so</span><span class="mf">.13</span></code></pre></div>
  
  
  <p>3.boost libs:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="err">$</span><span class="n">cd</span> <span class="n">boost_1_59_0</span><span class="o">/</span>
  
  <span class="err">$</span><span class="p">.</span><span class="o">/</span><span class="n">bootstrap</span><span class="p">.</span><span class="n">sh</span> 
  
  <span class="err">$</span><span class="p">.</span><span class="o">/</span><span class="n">b2</span> <span class="n">cxxflags</span><span class="o">=</span><span class="s">&quot;-I /home/work/anaconda3/include/python3.4m/&quot;</span>
  
  <span class="err">$</span><span class="n">sudo</span> <span class="p">.</span><span class="o">/</span><span class="n">b2</span> <span class="n">install</span> <span class="o">--</span><span class="n">prefix</span><span class="o">=/</span><span class="n">usr</span> <span class="n">cxxflags</span><span class="o">=</span><span class="s">&quot;-I /home/work/anaconda3/include/python3.4m/&quot;</span></code></pre></div>
  
  
  <h2>Install Caffe</h2>
  
  <p>The last step:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="err">$</span><span class="n">cd</span> <span class="n">caffe</span>
  
  <span class="err">$</span><span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="mf">1.0</span>
  
  <span class="err">$</span><span class="n">vim</span> <span class="n">Makefile</span><span class="p">.</span><span class="n">config</span>
  
  <span class="n">change</span> <span class="n">the</span> <span class="n">config</span> <span class="n">like</span> <span class="nl">this</span><span class="p">:</span>
  
  <span class="nl">BLAS</span> <span class="p">:</span><span class="o">=</span> <span class="n">open</span>
  
  <span class="nl">BLAS_INCLUDE</span> <span class="p">:</span><span class="o">=</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">include</span><span class="o">/</span><span class="n">openblas</span>
  
  <span class="nl">PYTHON_INCLUDE</span> <span class="p">:</span><span class="o">=</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">work</span><span class="o">/</span><span class="n">anaconda3</span><span class="o">/</span><span class="n">include</span> \
                         <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">work</span><span class="o">/</span><span class="n">anaconda3</span><span class="o">/</span><span class="n">include</span><span class="o">/</span><span class="n">python3</span><span class="mf">.4</span><span class="n">m</span> \
                         <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">work</span><span class="o">/</span><span class="n">anaconda3</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">python3</span><span class="mf">.4</span><span class="o">/</span><span class="n">site</span><span class="o">-</span><span class="n">packages</span><span class="o">/</span><span class="n">numpy</span><span class="o">/</span><span class="n">core</span><span class="o">/</span><span class="n">include</span>
  
  <span class="nl">PYTHON_LIBRARIES</span> <span class="p">:</span><span class="o">=</span> <span class="n">boost_python3</span> <span class="n">python3</span><span class="mf">.4</span><span class="n">m</span>
  
  <span class="err">$</span><span class="n">make</span>
  
  <span class="err">$</span><span class="n">make</span> <span class="n">pycaffe</span>
  
  <span class="err">$</span><span class="n">export</span> <span class="n">PYTHONPATH</span><span class="o">=</span><span class="err">$</span><span class="nl">PYTHONPATH</span><span class="p">:</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">work</span><span class="o">/</span><span class="n">soft</span><span class="o">/</span><span class="n">src</span><span class="o">/</span><span class="n">caffe</span><span class="o">/</span><span class="n">python</span></code></pre></div>
  
  
  <h2>TEST</h2>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="err">$</span><span class="n">cd</span> <span class="n">caffe</span>
  <span class="err">$</span><span class="n">make</span> <span class="n">test</span> <span class="o">&amp;&amp;</span> <span class="n">make</span> <span class="n">runtest</span></code></pre></div>
  
  
  <p>Good luck!</p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[How to install caffe 1.0 with Anaconda python3 on centos7]]></title>
              <link>https://www.54chen.com/blog/2017/07/04/how-to-build-caffe-1-dot-0-with-anaconda-python3/</link>
              <pubDate>2017-07-04T15:45:49+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2017/07/04/how-to-build-caffe-1-dot-0-with-anaconda-python3</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>以下是神经网络训练中经常会遇到的一些概念，进行了收集总结，供需要时查阅。</p>
  
  <p><img src=http://chen54.b0.upaiyun.com/1127/c10d_bg.jpg></p>
  
  <h2>LSE-最小二乘法</h2>
  
  <p>按偏差平方和最小的原则选取拟合曲线，并且采取二项式方程为拟合曲线的方法,称为最小二乘法。</p>
  
  <p>它通过最小化误差的平方和寻找数据的最佳函数匹配。</p>
  
  <p>利用最小二乘法可以简便地求得未知的数据，并使得这些求得的数据与实际数据之间误差的平方和为最小。</p>
  
  <!--more-->
  
  
  <h2>GD-梯度下降算法</h2>
  
  <p>参考tf.train.GradientDescentOptimizer</p>
  
  <p>梯度下降（GD）是最小化风险函数、损失函数的一种常用方法，随机梯度下降和批量梯度下降是两种迭代求解思路。</p>
  
  <p>学习率是GD中最关键的参数，了每个梯度的大小，大了会反复振荡，小了会计算困难。</p>
  
  <h2>SGD-随机梯度下降算法</h2>
  
  <p>参考keras.optimizers.SGD</p>
  
  <p>为了解决GD里学习率的选择问题，SGD用随机的办法来减少计算学习率的次数。</p>
  
  <p>SGD伴随的一个问题是噪音较多，使得SGD并不是每次迭代都向着整体最优化方向。</p>
  
  <p>keras.optimizers.SGD(lr=0.01, momentum=0.0, decay=0.0, nesterov=False)</p>
  
  <p>参数：</p>
  
  <p>lr：大于0的浮点数，学习率</p>
  
  <p>momentum：大于0的浮点数，动量参，它模拟的是物体运动时的惯性，即更新的时候在一定程度上保留之前更新的方向，同时利用当前batch的梯度微调最终的更新方向。这样一来，可以在一定程度上增加稳定性，从而学习地更快，并且还有一定摆脱局部最优的能力，这个值在0-1之间，在训练开始时，由于梯度可能会很大，所以初始值一般选为0.5；当梯度不那么大时，改为0.9。</p>
  
  <p>decay：大于0的浮点数，每次更新后的学习率衰减值</p>
  
  <p>nesterov：布尔值，确定是否使用Nesterov动量-为true时，启用执行简单的梯度下降步骤。</p>
  
  <p>SGD通常训练时间更长，容易陷入鞍点，但是在好的初始化和学习率调度方案的情况下，结果更可靠。</p>
  
  <h2>Adagrad</h2>
  
  <p>参考keras.optimizers.Adagrad</p>
  
  <p>不建议修改keras Adagrad算法任何参数。</p>
  
  <p>会在学习的过程中自动调整 learning rate, 对于出现频率低的参数使用较大的 learning rate, 出现频率高的参数使用较小的 learning rate. 因此, 这种方法对于训练数据比较稀疏的情况比较适用. AdaGrad 可以提高 SGD 的鲁棒性。</p>
  
  <p>Adagrad 的缺点是,在深度学习中, 这种方法导致学习率的调整太激进, 因此常常过早结束了学习过程。</p>
  
  <h2>RMSprop</h2>
  
  <p>参考keras.optimizers.RMSprop</p>
  
  <p>RNN网络经常使用此算法，在keras里，推荐全部默认参数，除了学习率之外。</p>
  
  <p>RMSProp是一个非常高效的算法, 但是目前并没有发表。他改进了AdaGrad算法，也是一种自动调整学习率的算法。</p>
  
  <h2>Adadelta</h2>
  
  <p>参考 keras.optimizers.Adadelta</p>
  
  <p>不建议修改keras的默认参数。</p>
  
  <p>AdaGrad 方法比较激进, 会过早结束优化过程, AdaDelta 的目的就是为了解决这个问题. 在 AdaGrad 中对 learning rate 进行 normalize 的参数是使用之前所有时间得到的梯度的累积, AdaDelta 的是通过设置窗口 w, 只使用部分时间的梯度累积.</p>
  
  <h2>Adam</h2>
  
  <p>参考keras.optimizers.Adam</p>
  
  <p>adam算法来自于RMSprop的改进，论文中推荐的超参数为 eps=1e-6，bata1=0.9，beta2=0.999，keras参考此设置，也不建议修改。其效果相当于SGD+Nesterov Momentum再加上bias的纠正机制。</p>
  
  <p>在大部分实践过程中，数据比较稀疏的情况下，此算法比较通吃。</p>
  
  <h2>Adamax</h2>
  
  <p>参考keras.optimizers.Adamax</p>
  
  <p>是adam的一个变种，他对学习率变化的上限提供了更简单的范围。</p>
  
  <h2>Nadam</h2>
  
  <p>参考keras.optimizers.Nadam</p>
  
  <p>不推荐修改默认参数值。</p>
  
  <p>Nadam对学习率有了更强的约束，同时对梯度的更新也有更直接的影响。一般而言，在想使用带动量的RMSprop，或者Adam的地方，大多可以使用Nadam取得更好的效果。</p>
  
  <p>［后续为激活函数］</p>
  
  <h2>sigmoid-逻辑回归函数</h2>
  
  <p>参考keras激活函数activation-sigmoid。</p>
  
  <p>由于函数图像很像一个“S”型，所以该函数又叫 sigmoid。广义逻辑回归曲线可以模仿一些情况人口增长（ P ）的 S 形曲线。起初阶段大致是 指数增长 ；然后随着开始变得饱和，增加变慢；最后，达到成熟时增加停止。 函数。用于估计某种事物的可能性。可以用来回归，也可以用来分类，主要是二分类。它不像SVM直接给出一个分类的结果，而是这个样本属于正类或者负类的可能性是多少，当然在多分类的系统中给出的是属于不同类别的可能性，进而通过可能性来分类。</p>
  
  <h2>softmax-多元逻辑回归</h2>
  
  <p>参考tf.nn.softmax</p>
  
  <p>如果不是在[0,1]中取值，而是在K个类别中取值，这时问题就变为一个多分类问题。</p>
  
  <p>sigmoid函数只能分两类，而softmax能分多类，softmax是sigmoid的扩展。</p>
  
  <p>sigmoid将一个real value映射到（0,1）的区间（当然也可以是（-1,1）），这样可以用来做二分类。</p>
  
  <p>而softmax把一个k维的real value向量（a1,a2,a3,a4….）映射成一个（b1,b2,b3,b4….）其中bi是一个0-1的常数，然后可以根据bi的大小来进行多分类的任务，如取权重最大的一维。</p>
  
  <h2>tanh</h2>
  
  <p>tanh 网络的收敛速度要比sigmoid快。因为 tanh 的输出均值比 sigmoid 更接近 0，可降低所需的迭代次数。</p>
  
  <h2>ReLU</h2>
  
  <p>与传统的sigmoid激活函数相比，ReLU能够有效缓解梯度消失问题，从而直接以监督的方式训练深度神经网络，无需依赖无监督的逐层预训练，这也是2012年深度卷积神经网络在ILSVRC竞赛中取得里程碑式突破的重要原因之一。</p>
  
  <p>ReLU随着训练的推进，部分输入会落入硬饱和区，导致对应权重无法更新。这种现象被称为“神经元死亡”。</p>
  
  <p>ReLU还经常被“诟病”的一个问题是输出具有偏移现象，即输出均值恒大于零。偏移现象和 神经元死亡会共同影响网络的收敛性。</p>
  
  <p>PReLU是ReLU 和 LReLU的改进版本，具有非饱和性。RReLU是一种非确定性激活函数，其参数是随机的。这种随机性类似于一种噪声，能够在一定程度上起到正则效果。</p>
  
  <h2>ELU</h2>
  
  <p>融合了sigmoid和ReLU，左侧具有软饱和性，右侧无饱和性。右侧线性部分使得ELU能够缓解梯度消失，而左侧软饱能够让ELU对输入变化或噪声更鲁棒。ELU的输出均值接近于零，所以收敛速度更快。</p>
  
  <h2>Maxout</h2>
  
  <p>maxout网络能够近似任意连续函数，且当w2,b2,…,wn,bn为0时，退化为ReLU。Maxout能够缓解梯度消失，同时又规避了ReLU神经元死亡的缺点，但增加了参数和计算量。</p>
  
  <h2>softplus</h2>
  
  <p>softplus 是对 ReLU 的平滑逼近的解析函数形式。</p>
  
  <h2>softsign</h2>
  
  <p>类似tanh的非线性函数，很少被用到。</p>
  
  <p>［后续为损失函数］</p>
  
  <h2>loss function</h2>
  
  <p>用来评价训练数据的好坏函数。</p>
  
  <p>MSE = mean_squared_error 均方差：参数估计值与参数真值之差平方的期望值。最小二乘法的误差度量办法。而在实际应用中，通常会使用均方差（MSE）作为一项衡量指标。</p>
  
  <p>对于回归任务，一般都提供了mse损失函数（基于树的模型除外）。</p>
  
  <p>MAE = mean_absolute_error 平均绝对误差</p>
  
  <p>MAPE = mean_absolute_percentage_error 相对百分误差</p>
  
  <p>在现实数据中，往往会存在异常点，并且模型可能对异常点拟合得并不好，因此提高评价指标的鲁棒性至关重要，于是可以使用中位数来替代平均数，如MAPE。</p>
  
  <p>MSLE = mean_squared_logarithmic_error 对MSE加一层对数的优化</p>
  
  <p>KLD = kullback_leibler_divergence KL散度 从预测值概率分布Q到真值概率分布P的信息增益,用以度量两个分布的差异。</p>
  
  <p>cosine = cosine_proximity  即预测值与真实标签的余弦距离平均值的相反数。</p>
  
  <p>binary_crossentropy（亦称作对数损失，logloss） softmax作为最后一层常用的是代价函数是他。对数损失函数(logarithmicloss function) 或对数似然损失函数(log-likelihood loss function)都是他。</p>
  
  <p>categorical_crossentropy：亦称作多类的对数损失，注意使用该目标函数时，需要将标签转化为形如(nb_samples, nb_classes)的二值序列。</p>
  
  <p>sparse_categorical_crossentrop：如上，但接受稀疏标签。注意，使用该函数时仍然需要你的标签与输出值的维度相同，你可能需要在标签数据上增加一个维度：np.expand_dims(y,-1)。</p>
  
  <h2>Reference</h2>
  
  <p><a href="https://keras.io/optimizers/">https://keras.io/optimizers/</a></p>
  
  <p><a href="http://keras-cn.readthedocs.io/en/latest/other/objectives/">http://keras-cn.readthedocs.io/en/latest/other/objectives/</a></p>
  
  <p><a href="http://sebastianruder.com/optimizing-gradient-descent/index.html">http://sebastianruder.com/optimizing-gradient-descent/index.html</a></p>
  
  <p><a href="http://blog.csdn.net/viewcode/article/details/8794401">http://blog.csdn.net/viewcode/article/details/8794401</a></p>
  
  <p><a href="http://blog.jobbole.com/88521/">http://blog.jobbole.com/88521/</a></p>
  
  <p><a href="http://blog.csdn.net/u014422406/article/details/52805924">http://blog.csdn.net/u014422406/article/details/52805924</a></p>
  
  <p><a href="http://shuokay.com/2016/06/11/optimization/">http://shuokay.com/2016/06/11/optimization/</a></p>
  
  <p><a href="http://blog.csdn.net/xiaozhuge080/article/details/52688613">http://blog.csdn.net/xiaozhuge080/article/details/52688613</a></p>
  
  <p><a href="http://www.cnblogs.com/zhangbojiangfeng/p/6362963.html">http://www.cnblogs.com/zhangbojiangfeng/p/6362963.html</a></p>
  
  <p><a href="http://www.qingpingshan.com/bc/jsp/126064.html">http://www.qingpingshan.com/bc/jsp/126064.html</a></p>
  
  <p><a href="http://blog.csdn.net/u014595019/article/details/52562159">http://blog.csdn.net/u014595019/article/details/52562159</a></p>
  
  <p><a href="http://blog.csdn.net/mao_xiao_feng/article/details/53242235?locationNum=9&amp;fps=1">http://blog.csdn.net/mao_xiao_feng/article/details/53242235?locationNum=9&amp;fps=1</a></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[优化器、激活函数、评价函数]]></title>
              <link>https://www.54chen.com/blog/2017/05/19/optimizer/</link>
              <pubDate>2017-05-19T10:47:32+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2017/05/19/optimizer</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <h2>前言</h2>
  
  <p>在直播软件中，典型的过程是A用户充值，送花给B用户，B用户提现。</p>
  
  <p>正是有这样一条变现的道路，无数盗刷、退款、36技术的黑产人盯上了直播，报道见到映客的损失一度到了300万人民币(本文价值至少300万了:P)。外链<a href="https://www.douban.com/group/topic/89441680/">https://www.douban.com/group/topic/89441680/</a></p>
  
  <p>本文介绍利用keras＋tensorflow，快速完成一个神经网络，从工程角度看深度学习带来的实际作用。</p>
  
  <p><img src=http://chen54.b0.upaiyun.com/1127/c10d_bg.jpg></p>
  
  <!--more-->
  
  
  <h2>安装</h2>
  
  <p>1.先升级pip</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">--</span><span class="n">upgrade</span> <span class="n">pip</span></code></pre></div>
  
  
  <p>2.安装keras</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">keras</span>
  <span class="o">...</span>
  <span class="n">installing</span> <span class="n">collected</span> <span class="n">packages</span><span class="p">:</span> <span class="n">numpy</span><span class="p">,</span> <span class="n">scipy</span><span class="p">,</span> <span class="n">six</span><span class="p">,</span> <span class="n">theano</span><span class="p">,</span> <span class="n">pyyaml</span><span class="p">,</span> <span class="n">keras</span>
  <span class="n">Successfully</span> <span class="n">installed</span> <span class="n">keras</span><span class="o">-</span><span class="mf">1.2</span><span class="o">.</span><span class="mi">1</span> <span class="n">numpy</span><span class="o">-</span><span class="mf">1.12</span><span class="o">.</span><span class="mi">0</span> <span class="n">pyyaml</span><span class="o">-</span><span class="mf">3.12</span> <span class="n">scipy</span><span class="o">-</span><span class="mf">0.18</span><span class="o">.</span><span class="mi">1</span> <span class="n">six</span><span class="o">-</span><span class="mf">1.10</span><span class="o">.</span><span class="mi">0</span> <span class="n">theano</span><span class="o">-</span><span class="mf">0.8</span><span class="o">.</span><span class="mi">2</span></code></pre></div>
  
  
  <p>3.安装tensorflow</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">export</span> <span class="n">TF_BINARY_URL</span><span class="o">=</span><span class="n">https</span><span class="p">:</span><span class="o">//</span><span class="n">storage</span><span class="o">.</span><span class="n">apis</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">tensorflow</span><span class="o">/</span><span class="n">mac</span><span class="o">/</span><span class="n">cpu</span><span class="o">/</span><span class="n">tensorflow</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="mi">0</span><span class="n">rc2</span><span class="o">-</span><span class="n">py2</span><span class="o">-</span><span class="n">none</span><span class="o">-</span><span class="nb">any</span><span class="o">.</span><span class="n">whl</span>
  <span class="n">chenzhen</span><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">--</span><span class="n">upgrade</span> <span class="err">$</span><span class="n">TF_BINARY_URL</span>
  <span class="o">...</span>
  <span class="n">Installing</span> <span class="n">collected</span> <span class="n">packages</span><span class="p">:</span> <span class="n">funcsigs</span><span class="p">,</span> <span class="n">pbr</span><span class="p">,</span> <span class="n">mock</span><span class="p">,</span> <span class="n">wheel</span><span class="p">,</span> <span class="n">pyparsing</span><span class="p">,</span> <span class="n">packaging</span><span class="p">,</span> <span class="n">appdirs</span><span class="p">,</span> <span class="n">setuptools</span><span class="p">,</span> <span class="n">protobuf</span><span class="p">,</span> <span class="n">tensorflow</span>
    <span class="n">Found</span> <span class="n">existing</span> <span class="n">installation</span><span class="p">:</span> <span class="n">wheel</span> <span class="mf">0.24</span><span class="o">.</span><span class="mi">0</span>
      <span class="n">Uninstalling</span> <span class="n">wheel</span><span class="o">-</span><span class="mf">0.24</span><span class="o">.</span><span class="mi">0</span><span class="p">:</span>
        <span class="n">Successfully</span> <span class="n">uninstalled</span> <span class="n">wheel</span><span class="o">-</span><span class="mf">0.24</span><span class="o">.</span><span class="mi">0</span>
    <span class="n">Found</span> <span class="n">existing</span> <span class="n">installation</span><span class="p">:</span> <span class="n">setuptools</span> <span class="mf">18.0</span><span class="o">.</span><span class="mi">1</span>
      <span class="n">Uninstalling</span> <span class="n">setuptools</span><span class="o">-</span><span class="mf">18.0</span><span class="o">.</span><span class="mi">1</span><span class="p">:</span>
        <span class="n">Successfully</span> <span class="n">uninstalled</span> <span class="n">setuptools</span><span class="o">-</span><span class="mf">18.0</span><span class="o">.</span><span class="mi">1</span>
  <span class="n">Successfully</span> <span class="n">installed</span> <span class="n">appdirs</span><span class="o">-</span><span class="mf">1.4</span><span class="o">.</span><span class="mi">0</span> <span class="n">funcsigs</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="mi">2</span> <span class="n">mock</span><span class="o">-</span><span class="mf">2.0</span><span class="o">.</span><span class="mi">0</span> <span class="n">packaging</span><span class="o">-</span><span class="mf">16.8</span> <span class="n">pbr</span><span class="o">-</span><span class="mf">1.10</span><span class="o">.</span><span class="mi">0</span> <span class="n">protobuf</span><span class="o">-</span><span class="mf">3.2</span><span class="o">.</span><span class="mi">0</span> <span class="n">pyparsing</span><span class="o">-</span><span class="mf">2.1</span><span class="o">.</span><span class="mi">10</span> <span class="n">setuptools</span><span class="o">-</span><span class="mf">34.1</span><span class="o">.</span><span class="mi">1</span> <span class="n">tensorflow</span><span class="o">-</span><span class="mf">1.0</span><span class="o">.</span><span class="mi">0</span><span class="n">rc2</span> <span class="n">wheel</span><span class="o">-</span><span class="mf">0.29</span><span class="o">.</span><span class="mi">0</span></code></pre></div>
  
  
  <p>4.检查安装是否成功</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s">&quot;import keras; print keras.__version__&quot;</span>
  <span class="n">Using</span> <span class="n">TensorFlow</span> <span class="n">backend</span><span class="o">.</span>
  <span class="mf">1.2</span><span class="o">.</span><span class="mi">1</span></code></pre></div>
  
  
  <p>5.检查配置是否正确</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">cat</span> <span class="o">~/.</span><span class="n">keras</span><span class="o">/</span><span class="n">keras</span><span class="o">.</span><span class="n">json</span>
  <span class="p">{</span>
      <span class="s">&quot;image_dim_ordering&quot;</span><span class="p">:</span> <span class="s">&quot;tf&quot;</span><span class="p">,</span> 
      <span class="s">&quot;epsilon&quot;</span><span class="p">:</span> <span class="mf">1e-07</span><span class="p">,</span> 
      <span class="s">&quot;floatx&quot;</span><span class="p">:</span> <span class="s">&quot;float32&quot;</span><span class="p">,</span> 
      <span class="s">&quot;backend&quot;</span><span class="p">:</span> <span class="s">&quot;tensorflow&quot;</span>
  <span class="p">}</span></code></pre></div>
  
  
  <p>6.安装h5py 用来保存权重数据</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">h5py</span>
  <span class="o">...</span>
  <span class="n">Installing</span> <span class="n">collected</span> <span class="n">packages</span><span class="p">:</span> <span class="n">h5py</span>
  <span class="n">Successfully</span> <span class="n">installed</span> <span class="n">h5py</span><span class="o">-</span><span class="mf">2.6</span><span class="o">.</span><span class="mi">0</span></code></pre></div>
  
  
  <p>7.安装 scikit-learn 用来写代码自动计算最优超参</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">scikit</span><span class="o">-</span><span class="n">learn</span>
  <span class="o">...</span>
  <span class="n">Installing</span> <span class="n">collected</span> <span class="n">packages</span><span class="p">:</span> <span class="n">scikit</span><span class="o">-</span><span class="n">learn</span>
  <span class="n">Successfully</span> <span class="n">installed</span> <span class="n">scikit</span><span class="o">-</span><span class="n">learn</span><span class="o">-</span><span class="mf">0.18</span><span class="o">.</span><span class="mi">1</span></code></pre></div>
  
  
  <p>8.安装hyperas 用来自动计算最优超参</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">pip</span> <span class="n">install</span> <span class="n">hyperas</span></code></pre></div>
  
  
  <h2>准备数据</h2>
  
  <p>首先拿线上两天的数据，一天用来训练，一天用来测试。</p>
  
  <p>数据都是csv的，根据过去的经验，一个用户给另一个用户刷钱，能拿到的数据项有：</p>
  
  <p>1.是否白名单 2.是否签约 3.粉丝数量 4.是否入库 5.播放次数  6.播放时长  7.充值总次数 8.关注数量  等8个数据</p>
  
  <p>所有数据均为数字，再在9位上加上0表示正常1表示有问题的用户（有问题的用户是通过之前不正常的充值靠人肉挑的）。</p>
  
  <h2>准备模型</h2>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">cat</span> <span class="n">deep</span><span class="o">.</span><span class="n">py</span> 
  <span class="kn">from</span> <span class="nn">keras.models</span> <span class="kn">import</span> <span class="n">Sequential</span>
  <span class="kn">from</span> <span class="nn">keras.layers</span> <span class="kn">import</span> <span class="n">Dense</span>
  <span class="kn">import</span> <span class="nn">numpy</span>
  <span class="n">dataset</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">loadtxt</span><span class="p">(</span><span class="s">&quot;0207.csv&quot;</span><span class="p">,</span> <span class="n">delimiter</span><span class="o">=</span><span class="s">&quot;,&quot;</span><span class="p">)</span>
  <span class="n">X</span> <span class="o">=</span> <span class="n">dataset</span><span class="p">[:,</span><span class="mi">0</span><span class="p">:</span><span class="mi">8</span><span class="p">]</span>
  <span class="n">Y</span> <span class="o">=</span> <span class="n">dataset</span><span class="p">[:,</span><span class="mi">8</span><span class="p">]</span>
  <span class="n">dataset2</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">loadtxt</span><span class="p">(</span><span class="s">&quot;0208.csv&quot;</span><span class="p">,</span> <span class="n">delimiter</span><span class="o">=</span><span class="s">&quot;,&quot;</span><span class="p">)</span>
  <span class="n">Z</span> <span class="o">=</span> <span class="n">dataset2</span><span class="p">[:,</span><span class="mi">0</span><span class="p">:</span><span class="mi">8</span><span class="p">]</span>
  <span class="n">Q</span> <span class="o">=</span> <span class="n">dataset2</span><span class="p">[:,</span><span class="mi">8</span><span class="p">]</span>
  
  <span class="c"># 输入8个参数，隐藏层12个神经元，先用relu激活，输出用sigmoid激活</span>
  <span class="n">model</span> <span class="o">=</span> <span class="n">Sequential</span><span class="p">()</span>
  <span class="n">model</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="n">input_dim</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">&#39;relu&#39;</span><span class="p">))</span>
  <span class="n">model</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">&#39;sigmoid&#39;</span><span class="p">))</span>
  
  <span class="c"># loss用mse 优化用Adamax  准确率衡量</span>
  <span class="n">model</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="s">&#39;mse&#39;</span><span class="p">,</span> <span class="n">optimizer</span><span class="o">=</span><span class="s">&#39;Adamax&#39;</span><span class="p">,</span> <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;accuracy&#39;</span><span class="p">])</span>
  
  <span class="c"># 训练100次，每次取60行</span>
  <span class="n">history</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">nb_epoch</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">60</span><span class="p">)</span>
  
  <span class="c"># 测试数据</span>
  <span class="n">loss</span><span class="p">,</span> <span class="n">accuracy</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">evaluate</span><span class="p">(</span><span class="n">Z</span><span class="p">,</span> <span class="n">Q</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">Loss: </span><span class="si">%.2f</span><span class="s">, Accuracy: </span><span class="si">%.2f%%</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">loss</span><span class="p">,</span> <span class="n">accuracy</span><span class="o">*</span><span class="mi">100</span><span class="p">))</span>
  
  <span class="c"># 保存下来训练好的模型供线上使用</span>
  <span class="c"># serialize model to JSON</span>
  <span class="n">model_json</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">to_json</span><span class="p">()</span>
  <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">&quot;model.json&quot;</span><span class="p">,</span> <span class="s">&quot;w&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">json_file</span><span class="p">:</span>
      <span class="n">json_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">model_json</span><span class="p">)</span>
  <span class="c"># serialize weights to HDF5</span>
  <span class="n">model</span><span class="o">.</span><span class="n">save_weights</span><span class="p">(</span><span class="s">&quot;model.h5&quot;</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">&quot;Saved model to disk&quot;</span><span class="p">)</span></code></pre></div>
  
  
  <h2>使用模型</h2>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">cat</span> <span class="n">run</span><span class="o">.</span><span class="n">py</span> 
  <span class="kn">from</span> <span class="nn">keras.models</span> <span class="kn">import</span> <span class="n">Sequential</span>
  <span class="kn">from</span> <span class="nn">keras.layers</span> <span class="kn">import</span> <span class="n">Dense</span>
  <span class="kn">from</span> <span class="nn">keras.models</span> <span class="kn">import</span> <span class="n">model_from_json</span>
  <span class="kn">import</span> <span class="nn">numpy</span>
  
  <span class="n">dataset2</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">loadtxt</span><span class="p">(</span><span class="s">&quot;0208.csv&quot;</span><span class="p">,</span> <span class="n">delimiter</span><span class="o">=</span><span class="s">&quot;,&quot;</span><span class="p">)</span>
  <span class="n">Z</span> <span class="o">=</span> <span class="n">dataset2</span><span class="p">[:,</span><span class="mi">0</span><span class="p">:</span><span class="mi">8</span><span class="p">]</span>
  <span class="n">Q</span> <span class="o">=</span> <span class="n">dataset2</span><span class="p">[:,</span><span class="mi">8</span><span class="p">]</span>
  <span class="c"># load json and create model</span>
  <span class="n">json_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;model.json&#39;</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span>
  <span class="n">loaded_model_json</span> <span class="o">=</span> <span class="n">json_file</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
  <span class="n">json_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
  <span class="n">loaded_model</span> <span class="o">=</span> <span class="n">model_from_json</span><span class="p">(</span><span class="n">loaded_model_json</span><span class="p">)</span>
  <span class="c"># load weights into new model</span>
  <span class="n">loaded_model</span><span class="o">.</span><span class="n">load_weights</span><span class="p">(</span><span class="s">&quot;model.h5&quot;</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">&quot;Loaded model from disk&quot;</span><span class="p">)</span>
  <span class="c"># test data</span>
  <span class="n">loaded_model</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="n">loss</span><span class="o">=</span><span class="s">&#39;mse&#39;</span><span class="p">,</span> <span class="n">optimizer</span><span class="o">=</span><span class="s">&#39;Adamax&#39;</span><span class="p">,</span> <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;accuracy&#39;</span><span class="p">])</span>
  <span class="n">score</span> <span class="o">=</span> <span class="n">loaded_model</span><span class="o">.</span><span class="n">evaluate</span><span class="p">(</span><span class="n">Z</span><span class="p">,</span> <span class="n">Q</span><span class="p">,</span> <span class="n">verbose</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
  <span class="k">print</span> <span class="s">&quot;for test </span><span class="si">%s</span><span class="s">: </span><span class="si">%.2f%%</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">loaded_model</span><span class="o">.</span><span class="n">metrics_names</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">score</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>
  
  <span class="c"># prediction probabilities里有预测的结果，需要启动一个简单的server对外服务即可。</span>
  <span class="n">probabilities</span> <span class="o">=</span> <span class="n">loaded_model</span><span class="o">.</span><span class="n">predict</span><span class="p">(</span><span class="n">Z</span><span class="p">)</span>
  <span class="n">predictions</span> <span class="o">=</span> <span class="p">[</span><span class="nb">float</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">x</span><span class="p">))</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">probabilities</span><span class="p">]</span>
  <span class="n">accuracy</span> <span class="o">=</span> <span class="n">numpy</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">predictions</span> <span class="o">==</span> <span class="n">Q</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="s">&quot;Prediction Accuracy: </span><span class="si">%.2f%%</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">accuracy</span><span class="o">*</span><span class="mi">100</span><span class="p">))</span></code></pre></div>
  
  
  <h2>超参调优</h2>
  
  <p>前面讲了工程使用的步骤，里面的参数都是随便写的，准确率大约60％，现在来讲如何让预测更加准确。</p>
  
  <p>test1是认好训练50次每次10条效果最好。</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">python</span> <span class="n">test1</span><span class="o">.</span><span class="n">py</span>
  <span class="n">Best</span><span class="p">:</span> <span class="mf">0.696000</span> <span class="n">using</span> <span class="p">{</span><span class="s">&#39;nb_epoch&#39;</span><span class="p">:</span> <span class="mi">50</span><span class="p">,</span> <span class="s">&#39;batch_size&#39;</span><span class="p">:</span> <span class="mi">10</span><span class="p">}</span></code></pre></div>
  
  
  <p>test2确认好优化器使用Adam效果最好。</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">python</span> <span class="n">test1</span><span class="o">.</span><span class="n">py</span>
  <span class="n">Best</span><span class="p">:</span> <span class="mf">0.686000</span> <span class="n">using</span> <span class="p">{</span><span class="s">&#39;optimizer&#39;</span><span class="p">:</span> <span class="s">&#39;Adam&#39;</span><span class="p">}</span></code></pre></div>
  
  
  <p>test3是优化器使用SGD时，确认里面的两个参数。</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">python</span> <span class="n">test3</span><span class="o">.</span><span class="n">py</span>
  <span class="n">Best</span><span class="p">:</span> <span class="mf">0.654000</span> <span class="n">using</span> <span class="p">{</span><span class="s">&#39;learn_rate&#39;</span><span class="p">:</span> <span class="mf">0.001</span><span class="p">,</span> <span class="s">&#39;momentum&#39;</span><span class="p">:</span> <span class="mf">0.8</span><span class="p">}</span></code></pre></div>
  
  
  <p>test4是初化类型。</p>
  
  <p>test5是激活函数类型。</p>
  
  <p>test6是dropout层的参数。</p>
  
  <p>test7是隐藏层神经元数量确定。</p>
  
  <p>相关的python代码见后。</p>
  
  <h2>Hyperas超参调优</h2>
  
  <p>上面一种调优办法有点麻烦，要一个一个试。</p>
  
  <p>Hyperas可以一次性完成。</p>
  
  <div class="highlight"><pre><code class="language-python" data-lang="python"><span class="n">chenzhen</span><span class="err">$</span> <span class="n">python</span> <span class="n">testh</span><span class="o">.</span><span class="n">py</span>
  <span class="n">Evalutation</span> <span class="n">of</span> <span class="n">best</span> <span class="n">performing</span> <span class="n">model</span><span class="p">:</span>
  <span class="mi">192</span><span class="o">/</span><span class="mi">200</span> <span class="p">[</span><span class="o">===========================&gt;..</span><span class="p">]</span> <span class="o">-</span> <span class="n">ETA</span><span class="p">:</span> <span class="mi">0</span><span class="n">s</span><span class="p">[</span><span class="mf">0.35499999999999998</span><span class="p">,</span> <span class="mf">0.64500000000000002</span><span class="p">]</span></code></pre></div>
  
  
  <p>Hyperas的执行结果直接保存了model，简单粗暴。代码见后。</p>
  
  <h2>后记</h2>
  
  <p>前面的模型，都比较简单，只定义了两三层，输入8个参数输出1个参数，然后有15个神经元的隐藏层，在testh.py里的调整参数时，增加了一些Activation层。</p>
  
  <p>要在工程上使用，还得上到分布式tensorflow上，进行更多的训练，以达到测试集的准确率更高。</p>
  
  <p>然后将保存下来的model，使用run.py里的逻辑，做成线上server，提供预测判断服务。</p>
  
  <p>预测的同时，要提供人工抽检反复训练，将判断错和判断漏的，都加入到训练的过程中去，做成定时过程，才能满足需要。</p>
  
  <p>另外不得不提的一点：将输入的数字归一化到0－1之间，对BPNN网络的训练效率会大大提升。</p>
  
  <h2>相关代码</h2>
  
  <p>上述所有代码均在 <a href="https://github.com/54chen/deep">https://github.com/54chen/deep</a> 。</p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[利用深度学习解决直播支付风控]]></title>
              <link>https://www.54chen.com/blog/2017/02/09/deeplearning/</link>
              <pubDate>2017-02-09T17:05:06+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2017/02/09/deeplearning</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p><img src=http://img03.taobaocdn.com/imgextra/i3/T13gR3Xa4cXXcFX9c3_050845.jpg></p>
  
  <p>2016年，以映客为的个人直播行业从无到有，小视频行业如火如荼，GIF快手渗透到二三线城市，简单来讲，麻雀虽小也是赚钱的。</p>
  
  <p>相比而言，在移动互联网发展高峰到了顶点的时间点，微信和支付宝的支付相争才是年头大戏。</p>
  
  <p>汇总一句话，2016年，移动互联网大盘已定，大鱼只抢支付，小鱼小虾只走垂直方向，未来也机会多多。</p>
  
  <!--more-->
  
  
  <p>个人方面，过去一年一直在各国支付和提现中了解细节，做一些收钱发钱的事情，关键还有一些如何防止黑产渗透到系统中进行套现的处理。映客没能处理好这个细节，一个月被人套现上百万。</p>
  
  <h2>展望2017，可能会有以下十件大事</h2>
  
  <p>1.国内污染比2016更加严重且封口更紧。</p>
  
  <p>2.公共安全事件再一次出现。</p>
  
  <p>3.微信支付在国内全方位超越支付宝。</p>
  
  <p>4.小米生态链企业要雄起一两个（出名或者IPO）。</p>
  
  <p>5.人工智能的项目依旧不产生实际超大收益。</p>
  
  <p>6.电子支付开始作为大鱼抢占的关键制高点。</p>
  
  <p>7.开始有国产手机厂商关门或被并购。</p>
  
  <p>8.直播行业常态化，变成所有应用都有的功能，收益下滑。</p>
  
  <p>9.云公司推出人工智能平台。</p>
  
  <p>10.人民币到7.2。</p>
  
  <p>明年见！</p>
  
  <h2>2016预测回顾</h2>
  
  <p>1.阿黎应该是要回来小米了。－准</p>
  
  <p>2.服务器行业应该不会出现啥大的热门技术了。－一般准，人工智能不算啥新技术，但的确又热了。</p>
  
  <p>3.的移动网络可能会有改善。－一般准，移动网络好了不少，2g用户少了许多。</p>
  
  <p>4.c/s结构的好用的框架开始出现。－准，微信开源的框架。</p>
  
  <p>5.进入资本冬天，各种小公司不好融资。－不准，热钱还是很多，很多小伙伴都创业去了。</p>
  
  <p>6.国内的污染进一步加剧。－准，的天数越来越多。</p>
  
  <p>7.安全生产事故再一次出现。－准，江西电厂74死。</p>
  
  <p>8.造开始追求品质。－一般准，良心新国货厂商开始关注品质。</p>
  
  <p>9.更多的有钱人。－一般准，这条随着6的加剧而增加。</p>
  
  <p>10.人民币汇率到7。－不准，只到6.9，没到7。</p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[54chen的2016总结和2017预测]]></title>
              <link>https://www.54chen.com/blog/2017/01/25/2016-2017/</link>
              <pubDate>2017-01-25T10:47:18+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2017/01/25/2016-2017</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>近期多半时间在支付相关的业务上，特此记录一下接触到的各家情况，尽可能本着客观公正的态度进行点评（实在受不了的渠道才偏主观，见谅）。
  <br><img src=http://chen54.b0.upaiyun.com/1017/19300534019252134249137429843.jpg><br>
  国内支付不用说，主要是微信、支付宝，另外不得不提到的还有苹果IAP、小米支付。</p>
  
  <p>分几部分， IAP主要在马来西亚、台湾等地使用的人不少（没接当地支付渠道的情况下）。paypal作为海外支付宝的角色，在很多外汇不管制的很方便。印度的话，商务不靠谱程度超乎想象，还是要提一提这几家mobikwiki、paytm。印尼、新马泰地区使用的话，讲一讲coda和doku。</p>
  
  <!--more-->
  
  
  <h2>微信支付</h2>
  
  <p>排名是分先后的，把微信排在第一，表明了在我心中，他的江湖地位已经稳固。</p>
  
  <p><br>1) 接入方面<br></p>
  
  <p>如果是第一次接他们的用户付款，平台、公众平台、商户平台 三个的名字可以搞晕你。特别是当你发现平台的openid和公众账号的openid不是一个的时候，他们的文档会告诉你使用unionid，然后你会SB地发现线上的数据根本就TMD没有unionid，根本就TMD没有unionid！没有unionid！（重复三遍以示重要）然后，你不得不让所有的用户退出登录重新进来。</p>
  
  <p>总结一下三个平台的关系：平台可以得到app里的openid，确认用户的身份; 公众平台可以得到在微信里打开h5的openid，也能确认用户的身份，如果要与前一个身份对应上，需要在平台做关联，然后产生一个相等的unionid; 商户平台和平台、公众平台有绑定关系，绑定后，才能收款的对应关系，然后（注意了！敲黑板！这里是重点！）服务号认证后才可申请微信支付，申请服务费：300元/次，然后（还是重点！）定期会过期，重新交钱。</p>
  
  <p>如果要实现app提现的功能（万能的直播app必备功能），之前有人用公众号发红包的api来实现，但这前提要求先关注公众号。最佳实践还是他们企业付款的api，当然了，这个api推出时间不长，一定要注意两个返回码，一个叫return_code，一个叫result_code，必须两个都是success才是真的成功！（敲黑板！！！）呵呵！</p>
  
  <p>另外一个不得不提的就是，如果你的服务器有ipv6支持，他们的域名dns会各种打圈，以至于请求慢到了5－10秒还不返回，对此参考这篇文章<a href="https://www.54chen.com/blog/2016/06/18/wexin-resolve-slowly/%EF%BC%8C%E6%88%96%E8%80%85%E5%85%B3%E9%97%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84ipv6%E3%80%82">https://www.54chen.com/blog/2016/06/18/wexin-resolve-slowly/%EF%BC%8C%E6%88%96%E8%80%85%E5%85%B3%E9%97%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84ipv6%E3%80%82</a></p>
  
  <p><br>2) 坏账<br></p>
  
  <p>微信的欺诈性订单基本没有，有纠纷的也比较少，目测主要是他们的垫付金额比较高，对商家基本无感（双手点赞！）。</p>
  
  <p><br>3) 用户使用方面<br></p>
  
  <p>微信支付因为微信的存在，比支付宝要方便，1000块以下的钱，还是微信方便，国内小R用户大量集中在这里。</p>
  
  <p><br>4) 靠谱度评分<br></p>
  
  <p>综合而言，给个最高分，4.5分（满分5分）。</p>
  
  <h2>支付宝</h2>
  
  <p>江湖上曾经的老大，现在略下降排名，天天搞朋友圈。</p>
  
  <p><br>1) 接入方面<br></p>
  
  <p>中规中举，没毛病。</p>
  
  <p><br>2) 坏账<br></p>
  
  <p>欺诈性订单没有，纠纷也没有，老牌支付，数据积累不少，坏人进不来。</p>
  
  <p><br>3) 用户使用方面<br></p>
  
  <p>大R全在这里，因为微信支付的上限只有3000每天，所以超出额度的大R都会选择支付宝。</p>
  
  <p><br>4) 靠谱度评分<br></p>
  
  <p>4.4，比微信少一分，就因为支付宝最近总在那个圈里瞎JB搞。</p>
  
  <h2>小米支付</h2>
  
  <p>这里要推荐小米应用内支付。</p>
  
  <p><br>1) 接入方面<br></p>
  
  <p><a href="http://dev.xiaomi.com/docs/gameentry/%E6%89%8B%E6%9C%BA&amp;pad%E6%B8%B8%E6%88%8F%E6%8E%A5%E5%85%A5%E6%96%87%E6%A1%A3/%E5%BA%94%E7%94%A8%E5%86%85%E6%94%AF%E4%BB%98SDK/">http://dev.xiaomi.com/docs/gameentry/%E6%89%8B%E6%9C%BA&amp;pad%E6%B8%B8%E6%88%8F%E6%8E%A5%E5%85%A5%E6%96%87%E6%A1%A3/%E5%BA%94%E7%94%A8%E5%86%85%E6%94%AF%E4%BB%98SDK/</a></p>
  
  <p>推荐的点在于，你只要接一个sdk，微信＋支付宝＋小米钱包，全都有了。</p>
  
  <p><br>2) 坏账<br></p>
  
  <p>同前。</p>
  
  <p><br>3) 用户使用方面<br></p>
  
  <p>基本上就是微信＋支付宝＋小米 用户，都适用。</p>
  
  <p><br>4) 靠谱度评分<br></p>
  
  <p>4分，差1分满分，是为了自己家的不要骄傲。</p>
  
  <h2>苹果IAP</h2>
  
  <p>这个渠道很变态又不得不用。</p>
  
  <p><br>1) 接入方面<br></p>
  
  <p>如果app涉及到支付购买虚拟物品，苹果应用商店规定必须使用IAP，否则不通过。</p>
  
  <p>接入的时候，严谨的服务器（注意！不要在客户端验证！）验证步骤是：1.有receipt字段  2.有bundle_id  3.in_app有值  4.有transaction_id  5.有prodution_id 6.bundle_id是本app  7.验transaction_id与app订单号是否相等 8.transaction_id是否使用过  9.订单号里的价格是否相等。（这里是重点！）</p>
  
  <p>另外，一个比较重要的防丢单的地方（又是重点！），因为苹果不提供server to server的notify机制，一旦用户端网络不好的时候，很容易出现钱被扣了没发货的情况。这个时候，客户端要使用ios提供的机制，收到应用的回调，重新向服务器发送check订单的请求。</p>
  
  <p><br>2) 坏账<br></p>
  
  <p>快别提了，苹果的坏账率一度能到96％，\cry～～</p>
  
  <p>如果你的app有提现功能（一般直播类打赏类软件必备功能），自己琢磨怎么风控吧（下次有机会再专门讲这里），否则会血本无归。</p>
  
  <p><br>3) 用户使用方面<br></p>
  
  <p>在大，访问佬服务器，使用体验你可以想象，转菊花打不开什么的是常事。关键服务这么烂，无耻的苹果要分30％的提成！</p>
  
  <p><br>4) 靠谱度评分<br></p>
  
  <p>1分，要不是苹果app store的原因，才不会用这么烂的支付。（希望苹果的员工能看到）</p>
  
  <h2>paypal</h2>
  
  <p>比支付宝还要老牌的国际范支付。</p>
  
  <p><br>1) 接入方面<br></p>
  
  <p>人家有server to server的notify，还是比较靠谱的。</p>
  
  <p>有个查订单的接口，千万不要被坑了，里面有有个叫state的字段，如果订单支付有问题，他们在第二个state字段里不会是completed，千万不要只用第一个state（血泪史！）。</p>
  
  <p>处理问题太慢了，一个被刷的案例，一个多星期还没有人来响应。。。商务找商务，再到开发查问题，损失都已经造成了。你能进得来才是怪事。</p>
  
  <p><br>2) 坏账<br></p>
  
  <p>用他们的支付，老外欺诈的很少，反而是国人在上面捣鼓退单提现挣钱。</p>
  
  <p>paypal的风控体系是完善的，能提前预防一些订单。</p>
  
  <p>然而万能的社会工程学成员，经常会在他们平台提起申诉，要求退款，然后你就会花大量的精力和他们提供证据，证明发货，而他们的审判也不一定会判断成给钱或不给，不可知性很强（这里也是重点，就是说他们的坏账率不固定！）。</p>
  
  <p><br>3) 用户使用方面<br></p>
  
  <p>海外用的人不少，除了个别外汇管制不行。</p>
  
  <p><br>4) 靠谱度评分<br></p>
  
  <p>3分，虽然是老牌的支付，还是没有支付宝牛逼。</p>
  
  <h2> IAB</h2>
  
  <p>这个不起眼的支付，居然可以这样。</p>
  
  <p><br>1) 接入方面<br></p>
  
  <p>这里，没有查询订单接口，没有server to server api。只有一个RSA的验证签名过程。</p>
  
  <p>重点一，一定要在服务器验证，不要在客户端验证，不要把私钥放在客户端。</p>
  
  <p>重点二，客户端代码要混淆（虽然也没啥卵用）。</p>
  
  <p>重点三，android developer网站一定要用英文版，中文的翻译版本不知道是哪年翻译的了，好多东西没有。<a href="https://developer.android.com//play/billing/billing_integrate.html">https://developer.android.com//play/billing/billing_integrate.html</a> 最后一段，讲了要在服务器做的事情（ras x.509 balabala&hellip;）。（大量的单机游戏直接就在本地做这个验证了，这真是一个路不拾遗的好时代～～～）</p>
  
  <p>重点四，漏单处理，客户端要在本地主动查询拥有的货品状态，主动commit，与苹果不同，手工的要多一点。</p>
  
  <p>重点五，注意android市场的版本号不要太低，如果用户在其他渠道拿到一个版本号更大的包，是不能支付成功的！</p>
  
  <p><br>2) 坏账<br></p>
  
  <p>刷的人一大把一大把的，但是，人家牛逼啊，基本都能拦住。</p>
  
  <p>不过不得不说的是，他们48小时可以无条件退款（虽然只有一两次到底几次不知道的机会。。。），机器学习就是牛！！</p>
  
  <p><br>3) 用户使用方面<br></p>
  
  <p>主要是海外有android play商店的地方，国内也有一少部分人用，但是连不上～～（因为）</p>
  
  <p><br>4) 靠谱度评分<br></p>
  
  <p>3.5分，比paypal都要靠谱。</p>
  
  <h2>paytm和mobikwik</h2>
  
  <p>印度人民大开挂。</p>
  
  <p><br>1) 接入方面<br></p>
  
  <p>之前在印度，大家是基本不用银行卡的，\笑cry~~</p>
  
  <p>阿里投资了paytm，是当地最大的，mobikwik是个新出来的。技术接入相对简单，完全继承和学习了支付宝。</p>
  
  <p>接入最大的问题是商务。外国公司是不能直接收他们的货币的，所以很长很长的商务周期后，才能开始接入，很长很长的周期后才能上线（截止发稿前，还是开发测试完成未上线）。</p>
  
  <p>而且，印度人民是不乐意看到app有请求发向的（可以），请自觉怎么。</p>
  
  <p><br>2) 坏账<br></p>
  
  <p>未知。</p>
  
  <p><br>3) 靠谱度评分<br></p>
  
  <p>0分，根据印度人民的不靠谱程度，最低分其实是-1。</p>
  
  <h2>codapay和doku</h2>
  
  <p>印尼和新马泰一带，遍布了华人的足迹。</p>
  
  <p><br>1) 接入方面<br></p>
  
  <p>印尼人民很有意思，线上线下的结合很普遍，他们在线上创建的订单，居然愿意跑一趟711去付现金。</p>
  
  <p>接入来讲，很流行的小额支付主要是靠手机运营商代扣（分成50％以上！）。</p>
  
  <p>稍微大额一点（大于相当人民25块），就会线上创建订单，便利店＋ATM付款了。</p>
  
  <p>codapay集成了一堆的支付方式，要实现的只有计算他们的301地址的签名的一段逻辑（意味着基本没有native的sdk）。</p>
  
  <p><br>2) 坏账<br></p>
  
  <p>他们坏账自己承担（民风纯朴，哪有啥坏账）。</p>
  
  <p><br>3) 靠谱度评分<br></p>
  
  <p>codapay2分，doku 2.1分，他两都是当地的支付商家，doku的接口多一些，多0.1分。</p>
  
  <p><input type="hidden" id="mid" name="mid" value="4055819258140259" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[、印度、印尼在线支付接入、风控和靠谱度对比]]></title>
              <link>https://www.54chen.com/blog/2016/12/22/payments/</link>
              <pubDate>2016-12-22T11:53:25+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/12/22/payments</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>这是小米大树系列第三部分，前两部分见：</p>
  
  <p><a href="https://www.54chen.com/blog/2016/08/06/mi2/">https://www.54chen.com/blog/2016/08/06/mi2/</a>  《小米大树part2:测试之痛》</p>
  
  <p><a href="https://www.54chen.com/blog/2016/08/01/mi1-dot-5/">https://www.54chen.com/blog/2016/08/01/mi1-dot-5/</a>  《小米大树part1.5:基础架构之痛答疑》</p>
  
  <p><a href="https://www.54chen.com/blog/2016/07/29/mi/">https://www.54chen.com/blog/2016/07/29/mi/</a>   《小米大树part1:基础架构之痛》</p>
  
  <p><img src=http://img03.taobaocdn.com/imgextra/i3/T1.1RSXmRfXXXjG9sV_021627.jpg></p>
  
  <p>一直想写一系列的笔记，记录整个小米六年的研发工作中实际遇到的困难，以及这一大群人如何不可避免的走向大公司氛围，又如何慢慢打破定势。</p>
  
  <!--more-->
  
  
  <p>作为开发人员，实在是难以启齿吐槽产品经理，以至于很久没有补上第三篇。－－题记</p>
  
  <h2>引子</h2>
  
  <p>十年前的互联网公司，大多数还没有这个岗位。如今人人都是产品经理的年代，烂大街的灵光一现的点子，不知所谓的需求描述，不着边际的实际作，无人问津的后续跟进，直接造就了产品太烂、进度缓慢的各种局面。</p>
  
  <h2>一句话需求</h2>
  
  <p>A君是产品，从业多年，下过海创过业，身经百战。</p>
  
  <p>A：我们的用户经常在这里出现了问题，我觉得要把这里拿掉，做成xxx的。</p>
  
  <p>开发B：好啊，我觉得也是。</p>
  
  <p>一个月过去了，A君遇到用户投诉，问B：当时说过的xxx怎么没有做啊？</p>
  
  <p>B一脸懵B：纳尼，我以为你只是随口说说。</p>
  
  <p>好的产品，不会提一句话需求，落实到文档到交互到协调到执行，才是好产品。</p>
  
  <h2>老板的需求</h2>
  
  <p>C君刚从某211高等学府毕业，茫然投身于产品事业，从业一段时间发现开发同学很懒，需求经常被开发追问为什么。</p>
  
  <p>一次偶然机会C君发现只要说需求来自x总，开发基本不再问，效率很高，久而久之，来自y总、来自z总就成了基本功了。</p>
  
  <p>C：这个需求是z总提的，我也不知道为什么。</p>
  
  <p>开发D：z总提的，你也需要知道为什么呀，z总也是用户，你这样的实现是不是真的解决了用户的问题？不要做传话筒。</p>
  
  <p>好的产品，不会把老板的需求挂在嘴边，会进一步挖掘用户真正的需求，据理力争。</p>
  
  <h2>忘记了的需求</h2>
  
  <p>产品E君，身兼数职，事情太多。</p>
  
  <p>E：这个需求的详细文档在xxx，分析也比较清楚，开发时间也已经给出，剩下就看大家的了。</p>
  
  <p>然后就没有然后了。</p>
  
  <p>一段时间过去了，无人再问津。</p>
  
  <p>突然有一天有人问起，xxx需求怎么还没做出来。</p>
  
  <p>做出来了，因产品太忙无人验收这个需求，一直没有合主干。。。</p>
  
  <p>一个好的产品，绝不会忘记自己提过的需求。</p>
  
  <h2>让步的需求</h2>
  
  <p>x功能，由于对系统架构改动太大，迟迟没有动工。</p>
  
  <p>产品对需求丝毫不让步，和开发天天讨论不休，却没有结论。</p>
  
  <p>产品F：这个需求只是为了试一试，谁也不知道有没有人用，我们先按简单的方案来搞吧。</p>
  
  <p>一个好的产品，一定会区分“试一试需求”和“all in需求”，并且提前告知开发。</p>
  
  <h2>无人验收的需求</h2>
  
  <p>一个y功能，不知道哪个产品君提出的，开发做完了，由于赶时间测试也马虎通过了。</p>
  
  <p>线上发现了问题，回滚，重新改逻辑，重新找bug，重新上线，浪费了大量的人员和时间。</p>
  
  <p>这一点，是产品的意识问题，互联网产品如果承担一部分测试工作（我们叫做验收功能），从越早环节发现问题影响越小、成本越低。</p>
  
  <h2>后记</h2>
  
  <p>黑猫白猫，好产品坏产品，只要是从用户出发的产品，都不孬。</p>
  
  <p><input type="hidden" id="mid" name="mid" value="4044684814661523" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[小米大树part3:产品进度之痛]]></title>
              <link>https://www.54chen.com/blog/2016/11/22/mi3/</link>
              <pubDate>2016-11-22T14:26:58+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/11/22/mi3</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>痛点太多，竟无从下笔。&ndash;题记</p>
  
  <h2>缘起</h2>
  
  <p>一直想写一系列的笔记，记录整个小米六年的研发工作中实际遇到的困难，以及这一大群人如何不可避免的走向大公司氛围，又如何慢慢打破定势，苦于自己拖延症影响，现在才开始总结。</p>
  
  <p>共分三个部分：基础架构之痛、测试之痛、产品进度之痛。本篇是第二部分。</p>
  
  <p><img src=http://img03.taobaocdn.com/imgextra/i3/T1.1RSXmRfXXXjG9sV_021627.jpg></p>
  
  <h2>测</h2>
  
  <p>2010年，来自各大公司的ABCD君，都拥有良好的软件工程习惯，测试代码行行见血。即便如此，依旧不能耽搁产品的节奏，于是开始找来专门的测试人员。</p>
  
  <p>E君从事开发测试多年，测试经验丰富，开发只要给个连接服务的框架就可以开工，属于给了原子弹就能上天型。</p>
  
  <!--more-->
  
  
  <p>F君则一直专注在手工测试上，产生一些稀奇古怪的作方法来帮助找出问题。</p>
  
  <p>A:“我们可以放弃单元测试，只搞好冒烟测试bvt，每日对线上和测试环境发起测试。”</p>
  
  <p>E:“没问题，给我们测试时间，一定可以完成覆盖。”</p>
  
  <p>然后一直时间不够，就在缺少开发测试和覆盖不全的矛盾中度过了两三年。</p>
  
  <p>经常会出现一种情况，新功能上线了，忘记通知测试……或者通知了测试没有人力来写测试代码…</p>
  
  <h2>不测</h2>
  
  <p>测试工程师一直被赶着，本身招聘价位低于开发，再加上稍微能力强一点的测试工程师就想着转为开发，测试这个活就越来越没有动力了，从而矛盾开始加剧了，直到有一天，暴发。</p>
  
  <p>D:“开发的屁股要自己擦！”</p>
  
  <p>E:“测试只提供测试框架技术支持！”</p>
  
  <p>F:“手工测试要提前预约！”</p>
  
  <p>A:“MD现在真大公司！”</p>
  
  <p>于是很多项目，急于上线，没有测试，这些项目都由开发打了保票，所以可以直接上线，当然了，开发也不是万能的，同时也不乏上去线就挂了的。</p>
  
  <h2>不能测</h2>
  
  <p>A:“为啥这个项目上线就挂了？”</p>
  
  <p>B:“因为有个逻辑有瓶颈，线上压力一大就挂了，测试环境没压力看不出来。”</p>
  
  <p>C:“为啥没考虑做压力测试？”</p>
  
  <p>D:“项目太杂乱，模块太多，关系不清，很难做压力测试的环境。”</p>
  
  <p>E:“给我们两个月时间搭环境，做压力测试！”</p>
  
  <p>两个月过去了，压力测试环境卡在了某个基础环境上，迟迟不能解决。算了，不能测不测了。反正我们灰度上线也是一种压测办法…</p>
  
  <p>就这样，度过了一天又一天。</p>
  
  <h2>不测</h2>
  
  <p>四五年后，并没有发生实质性变化。每当开发工程师回头看自己的代码时，经常会被自己吓到，真的有一种刀尖上跳舞的感觉。</p>
  
  <p>一旦大家被自己吓到，想到需要测试的时候，还没开始想办法立马会被错综复杂的服务吓退。</p>
  
  <p>就这样在胆颤心惊中度过一年又一年。</p>
  
  <h2>测</h2>
  
  <p>改变这一切的都是细节。</p>
  
  <p>在上一篇( <a href="https://www.54chen.com/blog/2016/07/29/mi/">https://www.54chen.com/blog/2016/07/29/mi/</a> )里提到的基础设施的改进后，模块之间服务之间抽象的很简单，只关心超时-被调用方承诺的最大服务时长，超过为不可用。</p>
  
  <p>在超时确立后，压力测试变得简单，要压测一个服务，只需要将下游服务全部故意超时掉（办法有很多种，比如调度到一个不存在的地方去等超时），此时可以得到此服务的最差表现下的压力情况，这个数据完全可以供线上参考使用。</p>
  
  <p>解决了压力测试的问题之后，我们延用了原来bvt的思路，依旧对服务进行最外围的功能覆盖测试，每次上线前，都依赖bvt的结果进行判断能否上线，不同在于，我们对整体服务的接入逻辑进行了分类，重要的地方提前准备用例，后期加的地方可以慢一点跟进。</p>
  
  <p>一切在向好的方向变化，虽然测试资源也是时不时紧张一下。</p>
  
  <p>一句话概括：测试工作不能省也不能推。测试没做好，开发占六成因素，测试占四成。</p>
  
  <p><input type="hidden" id="mid" name="mid" value="4005517720614298" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[小米大树part2:测试之痛]]></title>
              <link>https://www.54chen.com/blog/2016/08/06/mi2/</link>
              <pubDate>2016-08-06T16:20:19+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/08/06/mi2</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>上周末发了第一篇，在微博收到了许多朋友的反馈，可能是写得匆忙，没能完整描述，特加1.5，专门针对各位的问题进行答疑。</p>
  
  <p><img src=http://img03.taobaocdn.com/imgextra/i3/T1.1RSXmRfXXXjG9sV_021627.jpg></p>
  
  <p>原文地址：《小米大树part1:基础架构之痛》| <a href="https://www.54chen.com/blog/2016/07/29/mi/">https://www.54chen.com/blog/2016/07/29/mi/</a></p>
  
  <!--more-->
  
  
  <h2>问题一、集权</h2>
  
  <p>Q:@浩松 &hellip;为啥我觉得博主还是没有找到原因。这个东西就和为什么要统一度量衡统一文字集权虽然不同地方的方言可能有差别一样的，和有没有腾讯的人一点关系都没有啊</p>
  
  <p>A:其实我想表达的，并非是统一度量衡这个问题，发展过程中，大家的度量衡其实是统一的。而更大的问题是，度量衡本身不科学，我们大多数时间在监控一个服务自身的qps\percentile等数值，却没有一个可用性的数值来监控和报警，这是根本点。</p>
  
  <h2>问题二、吹腾讯</h2>
  
  <p>Q:@咩罗 花式吹腾讯&hellip;</p>
  
  <p>A:完全是个无心之举，但从腾讯过去从来不参加开源到现在一点一点放出来技术细节，的确要高于行业水平。回忆一下，已经很久没有遇到QQ大规模故障了。</p>
  
  <h2>问题三、git/memcahce也拿来说</h2>
  
  <p>Q:@沧落海 我靠，git，memcache都能拿来说</p>
  
  <p>A:为什么不能拿来说，git现在是十岁多，我在讲的五六年前的事情，国内还在流行svn，我们的团队还有人连svn都没用过。而memcache，我们引入的实际上是zookeeper和memcache的合体解决方法，做到自动化配置。</p>
  
  <h2>问题四、语言</h2>
  
  <p>Q:@辩图识人生 引入C基础架构，排除gc影响，提高吞吐。&ndash;现在基础平台以c为主？</p>
  
  <p>A:只是部分，因为小米还是没有CTO这样的行政岗位，有基础的团队自己会跑在前面，并不强求全公司的基础架构都发生改变。</p>
  
  <h2>问题五、版式</h2>
  
  <p>Q:@Easy 页面的行间距调一下吧……看着好诡异……</p>
  
  <p>A:这是个好问题，顺手调了一下，不知道大家感觉如何。</p>
  
  <h2>预告</h2>
  
  <p>《小米大树part2：测试之痛》大约周末有功夫写，写完就发。大概会记录当时我们如何做不了单元测试、如何做冒烟测试、如何在压力测试上失败，以及如何不测试。</p>
  
  <p><input type="hidden" id="mid" name="mid" value="4003741180911627" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[小米大树part1.5:基础架构之痛答疑]]></title>
              <link>https://www.54chen.com/blog/2016/08/01/mi1-dot-5/</link>
              <pubDate>2016-08-01T14:49:40+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/08/01/mi1-dot-5</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <h2>题记</h2>
  
  <p>无知和弱小不是生存的障碍，傲慢才是。 －－《三体》</p>
  
  <h2>缘起</h2>
  
  <p>一直想写一系列的笔记，记录整个小米六年的研发工作中实际遇到的困难，以及这一大群人如何不可避免的走向大公司氛围，又如何慢慢打破定势，苦于自己拖延症影响，现在才开始总结。</p>
  
  <p>共分三个部分：基础架构之痛、测试之痛、产品进度之痛。本篇是第一部分。</p>
  
  <p><img src=http://img03.taobaocdn.com/imgextra/i3/T1.1RSXmRfXXXjG9sV_021627.jpg></p>
  
  <h2>基础</h2>
  
  <p>2010年，第一批服务器工程师来自五湖四海，有金山、微软、、百度、人人，唯独，没有来自最大互联网公司－腾讯。</p>
  
  <p>A君（人物纯属虚构，以求表达效果）从业数年，经验丰富，说：“我觉得我们可以用一些php，简单好招人”，于是开始这样干了。</p>
  
  <p>B君说：“我们还可以用一些java，招人也不太难，现成的东西多”，于是这样作了。</p>
  
  <!--more-->
  
  
  <p>C君说：“的thrift也不错，我们需要一个这样的rpc框架”，于是用上了thrift。</p>
  
  <p>D君说：“与客户端最简单，还是用http请求吧，加上json，调起来方便”，于是就http+json了。</p>
  
  <p>E君和F君带来了先进的海外大公司经验，大家都深信不疑。</p>
  
  <p>G君带来了maven，H君带来了git，I君带来了zookeeper，J君带来了memcache，K君带来了scribe，L君带来了hadoop，M君带来了HBase，N君带来了spring。。。</p>
  
  <p>两年之后，诸君磨合成了以java为核心，诸多语言为辅助，看上去哪哪都大厂的基础体系。并且大家都认为可以为各兄弟无脑使用了。</p>
  
  <h2>问题</h2>
  
  <p>两年之后，人多事杂，诸君分为多个，多个都在共用着这一整套基础架构。</p>
  
  <p>有一天，X君在调用Y君的接口出现了速度突然变慢了一倍，从10ms的速度变成了100ms（因为基础架构里没有可用性的计算，X君也是在用户投诉说最外层的API慢，分析之后才发现只有可能是这里慢了）。</p>
  
  <p>X：“Y啊，你的服务不稳定啦，怎么慢了10倍，影响我们的服务啦”。</p>
  
  <p>Y：“不对啊，从基础架构里提供的counter看，我们的服务一切正常，99.9%的请求，都在5ms返回了”。</p>
  
  <p>X：“真的是你这边慢了，你再查查吧”。</p>
  
  <p>Y：“可能是网络有问题吧，我们的服务真的没有问题”。</p>
  
  <p>X无可奈何，Y也觉得自己没有过错，转身，X抱怨了一句：“TMD现在怎么这么官僚啊”。Y也莫名其妙：“草，A这的人太找茬了”。</p>
  
  <p>Z君在网络，从交换机上看了一下图，“网络一切正常”。</p>
  
  <p>这个技术问题就这样没有了结论。</p>
  
  <h2>原因</h2>
  
  <p>上述的场景在一天又一天演进，慢慢形成了所谓的大公司氛围，除非同一的人遇到了问题，很难将一个问题查到根本原因。</p>
  
  <p>而X君遇到的问题，也没有专家团队可以帮忙解决，因为当年引入技术的专家们，分散在各个，在为各自的方向努力，根本无暇顾及。</p>
  
  <p>靠前人拼凑出来的基础架构里，多年过去也没有可用性这样直接抽象的数据和监控报警。</p>
  
  <h2>X君之痛</h2>
  
  <p>根本的原因，是基础架构里，没有一个CTO的角色，从技术上进行抽象思考，从行政上强迫统一。</p>
  
  <p>腾讯的前CTO张志东应该是个牛逼的人，带领老一辈的技术高人们，没有这么多开源的项目可以借用，所有的东西都要靠自己来抽象。</p>
  
  <p>在没有开源行业的这个大保障（大包袱），腾讯的基础架构抽象得出奇的自然，再经过几代人的修补，已经坚不可破。</p>
  
  <p>而X君这次遇到的问题，痛点在于：1.基础架构里的监控数据无法表达X君、Y君服务的可用性。2.Y君所参考的基础架构里的自身监控数据也无法认同X君说自己的服务不稳定的现实。3.X君和Y君，都没有意识到，网络也是服务的一环，而不是交给硬件和网络维护。4.X和Y君都在使用java，典型的gc问题就可能导致双方的数据全部不可靠。</p>
  
  <h2>打破常规</h2>
  
  <p>在第四五年的时候，已经开始有在打破上述的常规：</p>
  
  <p>1.引入C基础架构，排除gc影响，提高吞吐。</p>
  
  <p>2.主动调用方以承诺最大延时得出可用性数据描述被动调用方服务稳定性，并且双方达成一致。</p>
  
  <p>3.除非有明确的原因分析结果，绝不把问题抛向相关团队。</p>
  
  <p>4.每个环节，都有可用性数据，包括客户端。</p>
  
  <p>一句话概括，对于互联网业务，可用性就是一切。</p>
  
  <p><input type="hidden" name="mid" id="mid" value="4002959094296739" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[小米大树part1:基础架构之痛]]></title>
              <link>https://www.54chen.com/blog/2016/07/29/mi/</link>
              <pubDate>2016-07-29T17:11:38+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/07/29/mi</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>有朋友在阿里云主机实现微信支付逻辑时，发现api.mch.weixin.qq.com的解析实在是太慢了。</p>
  
  <p>因此出现了手动修改/etc/hosts的情况，当然了，哪天微信支付要是换个机房肯定要挂。</p>
  
  <p><img src=http://chen54.b0.upaiyun.com/1017/19300534019252134249137429843.jpg></p>
  
  <p>我们的机房也有相似的同题，专门记录一下。</p>
  
  <!--more-->
  
  
  <h2>表象</h2>
  
  <p>代码里用curl来请求微信，经常超时，这时使用wget试验：</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="p">[</span><span class="n">root</span><span class="err">@</span><span class="mo">01</span> <span class="n">tmp</span><span class="p">]</span><span class="err">#</span> <span class="n">wget</span> <span class="n">api</span><span class="p">.</span><span class="n">mch</span><span class="p">.</span><span class="n">weixin</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span>
  <span class="o">--</span><span class="mi">2016</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mi">18</span> <span class="mi">14</span><span class="o">:</span><span class="mi">51</span><span class="o">:</span><span class="mo">03</span><span class="o">--</span>  <span class="nl">http</span><span class="p">:</span><span class="c1">//api.mch.weixin.qq.com/</span>
  <span class="n">Resolving</span> <span class="n">api</span><span class="p">.</span><span class="n">mch</span><span class="p">.</span><span class="n">weixin</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span><span class="p">...</span>  <span class="err">域名解析很久不出来</span></code></pre></div>
  
  
  <h2>测试确认是ipv6问题</h2>
  
  <p>给wget加上-4，强制使用ipv4，如果很快，那基本上确定是ipv6惹的祸了。</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="p">[</span><span class="n">root</span><span class="err">@</span><span class="mo">01</span> <span class="n">tmp</span><span class="p">]</span><span class="err">#</span> <span class="n">wget</span> <span class="o">-</span><span class="mi">4</span> <span class="n">api</span><span class="p">.</span><span class="n">mch</span><span class="p">.</span><span class="n">weixin</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span>
  <span class="o">--</span><span class="mi">2016</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mi">18</span> <span class="mi">17</span><span class="o">:</span><span class="mo">03</span><span class="o">:</span><span class="mi">52</span><span class="o">--</span>  <span class="nl">http</span><span class="p">:</span><span class="c1">//api.mch.weixin.qq.com/</span>
  <span class="n">Resolving</span> <span class="n">api</span><span class="p">.</span><span class="n">mch</span><span class="p">.</span><span class="n">weixin</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span><span class="p">...</span> <span class="mf">123.151.71.149</span><span class="p">,</span> <span class="mf">123.151.79.109</span>
  <span class="n">Connecting</span> <span class="n">to</span> <span class="n">api</span><span class="p">.</span><span class="n">mch</span><span class="p">.</span><span class="n">weixin</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span><span class="o">|</span><span class="mf">123.151.71.149</span><span class="o">|:</span><span class="mf">80.</span><span class="p">..</span> <span class="n">connected</span><span class="p">.</span></code></pre></div>
  
  
  <h2>代码分析</h2>
  
  <p>专门写个代码来测试ipv6的解析，用到系统函数getaddrinfo:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#include &lt;stdio.h&gt;</span>
  <span class="cp">#include &lt;string.h&gt;</span>
  <span class="cp">#include &lt;netdb.h&gt;</span>
  <span class="cp">#include &lt;iostream&gt;</span>
  <span class="cp">#include &lt;sys/types.h&gt;</span>
  <span class="cp">#include &lt;sys/types.h&gt;</span>
  <span class="cp">#include &lt;sys/socket.h&gt;</span>
  <span class="cp">#include &lt;arpa/inet.h&gt;</span>
  
  
  <span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>
  
  <span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  
      <span class="k">struct</span> <span class="n">addrinfo</span> <span class="n">hints</span><span class="p">,</span><span class="o">*</span><span class="n">answer</span><span class="p">,</span><span class="o">*</span><span class="n">curr</span><span class="p">,</span><span class="o">*</span><span class="n">p</span><span class="p">;</span>
  
      <span class="kt">int</span> <span class="n">error</span><span class="p">;</span>
  
      <span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">hints</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">hints</span><span class="p">);</span>
      <span class="n">hints</span><span class="p">.</span><span class="n">ai_family</span> <span class="o">=</span> <span class="n">AF_INET6</span><span class="p">;</span><span class="c1">//AF_UNSPEC; // use AF_INET6 to force IPv6</span>
      <span class="n">hints</span><span class="p">.</span><span class="n">ai_socktype</span> <span class="o">=</span> <span class="n">SOCK_STREAM</span><span class="p">;</span><span class="c1">//SOCK_DGRAM; // SOCK_STREAM</span>
  
      <span class="k">if</span> <span class="p">((</span><span class="n">error</span> <span class="o">=</span> <span class="n">getaddrinfo</span><span class="p">(</span><span class="s">&quot;api.mch.weixin.qq.com&quot;</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">hints</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">answer</span><span class="p">))</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
          <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;getaddrinfo: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">gai_strerror</span><span class="p">(</span><span class="n">error</span><span class="p">));</span>
          <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
      <span class="p">}</span> <span class="k">else</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span><span class="s">&quot;Success with a URL</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
  
      <span class="kt">char</span> <span class="n">ipstr</span><span class="p">[</span><span class="mi">16</span><span class="p">];</span>
      <span class="k">for</span> <span class="p">(</span><span class="n">curr</span> <span class="o">=</span> <span class="n">answer</span><span class="p">;</span> <span class="n">curr</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="n">curr</span> <span class="o">=</span> <span class="n">curr</span><span class="o">-&gt;</span><span class="n">ai_next</span><span class="p">)</span> <span class="p">{</span>
          <span class="n">inet_ntop</span><span class="p">(</span><span class="n">AF_INET</span><span class="p">,</span><span class="o">&amp;</span><span class="p">(((</span><span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="o">*</span><span class="p">)(</span><span class="n">curr</span><span class="o">-&gt;</span><span class="n">ai_addr</span><span class="p">))</span><span class="o">-&gt;</span><span class="n">sin_addr</span><span class="p">),</span><span class="n">ipstr</span><span class="p">,</span> <span class="mi">16</span><span class="p">);</span>
          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ipstr</span><span class="p">);</span>
      <span class="p">}</span>
  
      <span class="n">freeaddrinfo</span><span class="p">(</span><span class="n">answer</span><span class="p">);</span>
  
  
      <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
  <span class="p">}</span></code></pre></div>
  
  
  <p>包含头文件</p>
  
  <p>netdb.h</p>
  
  <p>函数原型</p>
  
  <p>int getaddrinfo( const char <em>hostname, const char </em>service, const struct addrinfo *hints, struct addrinfo **result );</p>
  
  <p>参数说明</p>
  
  <p>hints：可以是一个空指针，也可以是一个指向某个addrinfo结构体的指针，调用者在这个结构中填入关于期望返回的信息类型的暗示。举例来说：如果指定的服务既支持TCP也支持UDP，那么调用者可以把hints结构中的ai_socktype成员设置成SOCK_DGRAM使得返回的仅仅是适用于数据报套接口的信息。而是否ipv6则由ai_family决定。</p>
  
  <p>result：本函数通过result指针参数返回一个指向addrinfo结构体链表的指针。</p>
  
  <p>返回值：0——成功，非0——出错</p>
  
  <h2>测试结果</h2>
  
  <p>ai_family为ipv6时，只会寻找ipv6的解析结果，一般域名也没设置。ai_family为AF_UNSPEC时，会先ipv6再ipv4的，而api.mch.weixin.qq.com这个域名的ipv6解析出奇的慢（qq.com却不慢，原因见后）。</p>
  
  <h2>解决办法</h2>
  
  <p>如果是curl，c可以强制指定ipv4，使用curl_easy_setopt(curl, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);</p>
  
  <p>其他语言的也参考此法。</p>
  
  <h2>测试代码下载</h2>
  
  <p><a href="https://github.com/54chen/dns_test">https://github.com/54chen/dns_test</a></p>
  
  <h2>深层原因分析</h2>
  
  <p>nslookup -query=AAAA api.mch.weixin.qq.com -debug 是找不到解析的（指定的AAAA就是ipv6），然后会发现一个SOA声明和他的上级weixin.qq.com有一个ipv6的CNAME，到了minorshort.weixin.qq.com，而这域名又是没有ipv6的解析的。</p>
  
  <p>目测ipv6找解析时是在这个SOA和CNAME的地方打圈了，微信的同学们是不是考虑让大伙好过一点，把这些个域名的ipv6设置去掉。</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">dig</span> <span class="err">@</span><span class="n">ns</span><span class="o">-</span><span class="n">tel1</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span> <span class="n">weixin</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span> <span class="n">AAAA</span>
  
  <span class="n">weixin</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span><span class="p">.</span>        <span class="mi">43200</span>   <span class="n">IN</span>   <span class="n">SOA</span>  <span class="n">ns</span><span class="o">-</span><span class="n">tel1</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span><span class="p">.</span> <span class="n">webmaster</span><span class="p">.</span><span class="n">qq</span><span class="p">.</span><span class="n">com</span><span class="p">.</span> <span class="mi">1293502040</span> <span class="mi">300</span> <span class="mi">600</span> <span class="mi">86400</span> <span class="mi">300</span></code></pre></div>
  
  
  <p><input type="hidden" id="mid" name="mid" value="3987785364529324" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[微信支付api.mch.weixin.qq.com域名解析慢原因：ipv6]]></title>
              <link>https://www.54chen.com/blog/2016/06/18/wexin-resolve-slowly/</link>
              <pubDate>2016-06-18T16:56:47+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/06/18/wexin-resolve-slowly</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>这里记录了一种简单的办法，在遇到写c/c++找不到答案时的最简单找代码办法。</p>
  
  <p><img src=http://chen54.b0.upaiyun.com/20141211/thinking.jpg></p>
  
  <p>方法是：找php怎么解决，大把的答案，然后看php源代码是怎么用c实现的。</p>
  
  <!--more-->
  
  
  <h2>提出</h2>
  
  <p>我们server端在对接 play的时候，遇到了ras加密来验证参数的实现，官方也没有什么c的参考代码，java和php的网上倒是能找到一堆。</p>
  
  <h2>java怎么解决</h2>
  
  <p>java的实现和本文要说的内容无关，只是随带一列：</p>
  
  <div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">verify</span><span class="o">(</span><span class="n">String</span> <span class="n">publicKey</span><span class="o">,</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span> <span class="n">sign</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
  
          <span class="c1">// 解密由base64编码的公钥</span>
          <span class="kt">byte</span><span class="o">[]</span> <span class="n">keyBytes</span> <span class="o">=</span> <span class="n">Base64</span><span class="o">.</span><span class="na">decodeBase64</span><span class="o">(</span><span class="n">publicKey</span><span class="o">);</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">keyBytes</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
          <span class="c1">// 构造X509EncodedKeySpec对象</span>
          <span class="n">X509EncodedKeySpec</span> <span class="n">keySpec</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">X509EncodedKeySpec</span><span class="o">(</span><span class="n">keyBytes</span><span class="o">);</span>
  
          <span class="c1">// KEY_ALGORITHM 指定的加密算法</span>
          <span class="n">KeyFactory</span> <span class="n">keyFactory</span> <span class="o">=</span> <span class="n">KeyFactory</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
  
          <span class="c1">// 取公钥匙对象</span>
          <span class="n">PublicKey</span> <span class="n">pubKey</span> <span class="o">=</span> <span class="n">keyFactory</span><span class="o">.</span><span class="na">generatePublic</span><span class="o">(</span><span class="n">keySpec</span><span class="o">);</span>
  
          <span class="n">Signature</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">Signature</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;SHA1WithRSA&quot;</span><span class="o">);</span>
          <span class="n">signature</span><span class="o">.</span><span class="na">initVerify</span><span class="o">(</span><span class="n">pubKey</span><span class="o">);</span>
          <span class="n">signature</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
  
          <span class="c1">// 验证签名是否正常</span>
          <span class="k">return</span> <span class="n">signature</span><span class="o">.</span><span class="na">verify</span><span class="o">(</span><span class="n">Base64</span><span class="o">.</span><span class="na">decodeBase64</span><span class="o">(</span><span class="n">sign</span><span class="o">));</span>
      <span class="o">}</span></code></pre></div>
  
  
  <h2>php怎么解决</h2>
  
  <p>php的实现比较多，随便找了一个，没有验证过：</p>
  
  <div class="highlight"><pre><code class="language-php" data-lang="php"><span class="cp">&lt;?php</span>
  <span class="nv">$public_key</span> <span class="o">=</span> <span class="nb">file_get_contents</span><span class="p">(</span><span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">)</span><span class="o">.</span><span class="nx">’</span><span class="o">/</span><span class="nx">rsa_public_key</span><span class="o">.</span><span class="nx">pem’</span><span class="p">);</span>
  <span class="nv">$pkeyid</span> <span class="o">=</span> <span class="nb">openssl_pkey_get_public</span><span class="p">(</span><span class="nv">$public_key</span><span class="p">);</span>
  <span class="nv">$data</span> <span class="o">=</span> <span class="nx">‘abc’</span><span class="p">;</span>
  <span class="nv">$sign</span> <span class="o">=</span> <span class="nx">‘WkMaSsx9Fbj9</span><span class="o">/</span><span class="nx">YyjoM1X0SLYvaFbsz9VmMaxc42fXxamEEIj5AfqQLrygEZRq0gkLNT4heIwOiSWEAWbfD4imaERKk07ANXEtZJ9jPJvyvg70IVvaYMKAr7bX0dJXmYw4aHnkcWR1kz27Drr6fxPmchB9WCsRmi4VfhVoF1</span><span class="o">+</span><span class="nx">HRFOp28nIVReGRcbwbW1</span><span class="o">/</span><span class="nx">bcMisXbitirz9Wq396vY88GUSgbgNdhFXX</span><span class="o">/</span><span class="nx">kzjRBTjnG</span><span class="o">+</span><span class="nx">CIhXq4HPdOWovqtPhQoxmK55</span><span class="o">+</span><span class="nx">V</span><span class="o">+</span><span class="nx">vxNZk9OPPHHaN3vVswk062NOs2</span><span class="o">/</span><span class="mo">05</span><span class="nx">yNVObL</span><span class="o">+</span><span class="nx">PWeg</span><span class="o">/</span><span class="nx">m43buXYalmkrwEhemdGfjIdNEoSO2D4gikvm43cg</span><span class="o">==</span><span class="nx">’</span><span class="p">;</span>
  <span class="nv">$sign</span> <span class="o">=</span> <span class="nb">base64_decode</span><span class="p">(</span><span class="nv">$sign</span><span class="p">);</span>
  <span class="k">if</span> <span class="p">(</span><span class="nv">$pkeyid</span><span class="p">)</span> <span class="p">{</span>
  <span class="nv">$verify</span> <span class="o">=</span> <span class="nb">openssl_verify</span><span class="p">(</span><span class="nv">$data</span><span class="p">,</span> <span class="nv">$sign</span><span class="p">,</span> <span class="nv">$pkeyid</span><span class="p">,</span> <span class="nx">OPENSSL_ALGO_MD5</span><span class="p">);</span>
  <span class="nb">openssl_free_key</span><span class="p">(</span><span class="nv">$pkeyid</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$verify</span><span class="p">);</span>
  <span class="cp">?&gt;</span><span class="x"></span></code></pre></div>
  
  
  <h2>找到代码</h2>
  
  <p>看到上面的php代码，关键的几个函数有：openssl_pkey_get_public    openssl_verify</p>
  
  <p>然后转战最新的php源代码，<a href="https://github.com/php/php-src/blob/80f91fd9d513b83ca88345a2a8c76523e0164789/ext/openssl/openssl.c">https://github.com/php/php-src/blob/80f91fd9d513b83ca88345a2a8c76523e0164789/ext/openssl/openssl.c</a> 。</p>
  
  <p>别问为什么可以定位到这个文件的，github可以直接搜一个库里的源文件。</p>
  
  <p>忽略一切以zend、zval开头的逻辑，直接找上面关键的函数。</p>
  
  <p>于是就找到了关键的头文件:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="cm">/* OpenSSL includes */</span>
  <span class="cp">#include &lt;openssl/evp.h&gt;</span>
  <span class="cp">#include &lt;openssl/bn.h&gt;</span>
  <span class="cp">#include &lt;openssl/rsa.h&gt;</span>
  <span class="cp">#include &lt;openssl/dsa.h&gt;</span>
  <span class="cp">#include &lt;openssl/dh.h&gt;</span>
  <span class="cp">#include &lt;openssl/x509.h&gt;</span>
  <span class="cp">#include &lt;openssl/x509v3.h&gt;</span>
  <span class="cp">#include &lt;openssl/crypto.h&gt;</span>
  <span class="cp">#include &lt;openssl/pem.h&gt;</span>
  <span class="cp">#include &lt;openssl/err.h&gt;</span>
  <span class="cp">#include &lt;openssl/conf.h&gt;</span>
  <span class="cp">#include &lt;openssl/rand.h&gt;</span>
  <span class="cp">#include &lt;openssl/ssl.h&gt;</span>
  <span class="cp">#include &lt;openssl/pkcs12.h&gt;</span></code></pre></div>
  
  
  <p>关键的一行key生成代码:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">key</span> <span class="o">=</span> <span class="n">PEM_read_bio_PrivateKey</span><span class="p">(</span><span class="n">in</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">passphrase</span><span class="p">);</span></code></pre></div>
  
  
  <p>关键的核心逻辑:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">EVP_VerifyInit</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="n">mdtype</span><span class="p">);</span>
      <span class="n">EVP_VerifyUpdate</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">data_len</span><span class="p">);</span>
      <span class="n">err</span> <span class="o">=</span> <span class="n">EVP_VerifyFinal</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">signature</span><span class="p">,</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="p">)</span><span class="n">signature_len</span><span class="p">,</span> <span class="n">pkey</span><span class="p">);</span>
      <span class="n">EVP_MD_CTX_cleanup</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">);</span>
  
      <span class="k">if</span> <span class="p">(</span><span class="n">keyresource</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
          <span class="n">EVP_PKEY_free</span><span class="p">(</span><span class="n">pkey</span><span class="p">);</span>
      <span class="p">}</span></code></pre></div>
  
  
  <p>这么些核心代码都找到了，还不会抄吗？</p>
  
  <h2>最终解决</h2>
  
  <p>通过上面的过程，进行自己的组装，已经再简单不过了，为了让写c/c++的同学们快速得到 play的rsa验证代码，特别贴一下：</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="kt">int</span> <span class="nf">verifiedByRsaPublicKey</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">publicKey</span><span class="p">,</span> <span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">signature</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">message</span><span class="p">)</span> <span class="p">{</span>
      <span class="kt">char</span> <span class="o">*</span><span class="n">chPublicKey</span> <span class="o">=</span> <span class="n">const_cast</span><span class="o">&lt;</span><span class="kt">char</span> <span class="o">*&gt;</span><span class="p">(</span><span class="n">publicKey</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>
  
      <span class="n">BIO</span><span class="o">*</span> <span class="n">mem_bio</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">((</span><span class="n">mem_bio</span> <span class="o">=</span> <span class="n">BIO_new_mem_buf</span><span class="p">(</span><span class="n">chPublicKey</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">))</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>        <span class="c1">//从字符串读取RSA公钥</span>
          <span class="n">BIO_free</span><span class="p">(</span><span class="n">mem_bio</span><span class="p">);</span>
          <span class="k">return</span> <span class="o">-</span><span class="mi">3</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="n">EVP_PKEY</span> <span class="o">*</span><span class="n">publicRsa</span> <span class="o">=</span> <span class="n">PEM_read_bio_PUBKEY</span><span class="p">(</span><span class="n">mem_bio</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
      <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">slen</span> <span class="o">=</span> <span class="n">signature</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>
  
      <span class="n">EVP_MD_CTX</span> <span class="n">md_ctx</span><span class="p">;</span>
      <span class="n">EVP_VerifyInit</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="n">EVP_sha1</span><span class="p">());</span>
      <span class="n">EVP_VerifyUpdate</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">message</span><span class="p">));</span>
      <span class="kt">int</span> <span class="n">err</span> <span class="o">=</span> <span class="n">EVP_VerifyFinal</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="n">signature</span><span class="p">.</span><span class="n">data</span><span class="p">(),</span> <span class="n">slen</span><span class="p">,</span> <span class="n">publicRsa</span><span class="p">);</span>
      <span class="n">EVP_MD_CTX_cleanup</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">);</span>
      <span class="n">EVP_PKEY_free</span><span class="p">(</span><span class="n">publicRsa</span><span class="p">);</span>
      <span class="k">return</span> <span class="n">err</span><span class="p">;</span>
  <span class="p">}</span></code></pre></div>
  
  
  <h2>结论</h2>
  
  <p>通过php的解决方案去找到php的实现，是写c/c++同学们不可不学的一招。</p>
  
  <h2>EOF</h2>
  
  <h2>English Version</h2>
  
  <h2>a story about SHA1WithRSA/ras/X509 with c/c++</h2>
  
  <p>This is a simple solution when you do not know how to develop with c/c++.</p>
  
  <p>The solution is,it will have lots of answer ho to do with php in ,and then look up the desgin in the source codes of php.</p>
  
  <h2>Question</h2>
  
  <p>We need to verify the parameters by RSA when we devlop the  Play apps.There is not any reference codes with c/c++.There are so many java or php examples in the internet.</p>
  
  <h2>How to resolve in java</h2>
  
  <p>It no connection with what we are talking about.Just BTW:</p>
  
  <div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">verify</span><span class="o">(</span><span class="n">String</span> <span class="n">publicKey</span><span class="o">,</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">data</span><span class="o">,</span> <span class="n">String</span> <span class="n">sign</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
  
          <span class="c1">// 解密由base64编码的公钥</span>
          <span class="kt">byte</span><span class="o">[]</span> <span class="n">keyBytes</span> <span class="o">=</span> <span class="n">Base64</span><span class="o">.</span><span class="na">decodeBase64</span><span class="o">(</span><span class="n">publicKey</span><span class="o">);</span>
          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">keyBytes</span><span class="o">.</span><span class="na">length</span><span class="o">);</span>
          <span class="c1">// 构造X509EncodedKeySpec对象</span>
          <span class="n">X509EncodedKeySpec</span> <span class="n">keySpec</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">X509EncodedKeySpec</span><span class="o">(</span><span class="n">keyBytes</span><span class="o">);</span>
  
          <span class="c1">// KEY_ALGORITHM 指定的加密算法</span>
          <span class="n">KeyFactory</span> <span class="n">keyFactory</span> <span class="o">=</span> <span class="n">KeyFactory</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;RSA&quot;</span><span class="o">);</span>
  
          <span class="c1">// 取公钥匙对象</span>
          <span class="n">PublicKey</span> <span class="n">pubKey</span> <span class="o">=</span> <span class="n">keyFactory</span><span class="o">.</span><span class="na">generatePublic</span><span class="o">(</span><span class="n">keySpec</span><span class="o">);</span>
  
          <span class="n">Signature</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">Signature</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="s">&quot;SHA1WithRSA&quot;</span><span class="o">);</span>
          <span class="n">signature</span><span class="o">.</span><span class="na">initVerify</span><span class="o">(</span><span class="n">pubKey</span><span class="o">);</span>
          <span class="n">signature</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">data</span><span class="o">);</span>
  
          <span class="c1">// 验证签名是否正常</span>
          <span class="k">return</span> <span class="n">signature</span><span class="o">.</span><span class="na">verify</span><span class="o">(</span><span class="n">Base64</span><span class="o">.</span><span class="na">decodeBase64</span><span class="o">(</span><span class="n">sign</span><span class="o">));</span>
      <span class="o">}</span></code></pre></div>
  
  
  <h2>How to resolve in php</h2>
  
  <p>There are too many php examples.Find one without checking:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="o">&lt;?</span><span class="n">php</span>
  <span class="err">$</span><span class="n">public_key</span> <span class="o">=</span> <span class="n">file_get_contents</span><span class="p">(</span><span class="n">dirname</span><span class="p">(</span><span class="n">__FILE__</span><span class="p">).</span><span class="err">’</span><span class="o">/</span><span class="n">rsa_public_key</span><span class="p">.</span><span class="n">pem</span><span class="err">’</span><span class="p">);</span>
  <span class="err">$</span><span class="n">pkeyid</span> <span class="o">=</span> <span class="n">openssl_pkey_get_public</span><span class="p">(</span><span class="err">$</span><span class="n">public_key</span><span class="p">);</span>
  <span class="err">$</span><span class="n">data</span> <span class="o">=</span> <span class="err">‘</span><span class="n">abc</span><span class="err">’</span><span class="p">;</span>
  <span class="err">$</span><span class="n">sign</span> <span class="o">=</span> <span class="err">‘</span><span class="n">WkMaSsx9Fbj9</span><span class="o">/</span><span class="n">YyjoM1X0SLYvaFbsz9VmMaxc42fXxamEEIj5AfqQLrygEZRq0gkLNT4heIwOiSWEAWbfD4imaERKk07ANXEtZJ9jPJvyvg70IVvaYMKAr7bX0dJXmYw4aHnkcWR1kz27Drr6fxPmchB9WCsRmi4VfhVoF1</span><span class="o">+</span><span class="n">HRFOp28nIVReGRcbwbW1</span><span class="o">/</span><span class="n">bcMisXbitirz9Wq396vY88GUSgbgNdhFXX</span><span class="o">/</span><span class="n">kzjRBTjnG</span><span class="o">+</span><span class="n">CIhXq4HPdOWovqtPhQoxmK55</span><span class="o">+</span><span class="n">V</span><span class="o">+</span><span class="n">vxNZk9OPPHHaN3vVswk062NOs2</span><span class="o">/</span><span class="mo">05</span><span class="n">yNVObL</span><span class="o">+</span><span class="n">PWeg</span><span class="o">/</span><span class="n">m43buXYalmkrwEhemdGfjIdNEoSO2D4gikvm43cg</span><span class="o">==</span><span class="err">’</span><span class="p">;</span>
  <span class="err">$</span><span class="n">sign</span> <span class="o">=</span> <span class="n">base64_decode</span><span class="p">(</span><span class="err">$</span><span class="n">sign</span><span class="p">);</span>
  <span class="k">if</span> <span class="p">(</span><span class="err">$</span><span class="n">pkeyid</span><span class="p">)</span> <span class="p">{</span>
  <span class="err">$</span><span class="n">verify</span> <span class="o">=</span> <span class="n">openssl_verify</span><span class="p">(</span><span class="err">$</span><span class="n">data</span><span class="p">,</span> <span class="err">$</span><span class="n">sign</span><span class="p">,</span> <span class="err">$</span><span class="n">pkeyid</span><span class="p">,</span> <span class="n">OPENSSL_ALGO_MD5</span><span class="p">);</span>
  <span class="n">openssl_free_key</span><span class="p">(</span><span class="err">$</span><span class="n">pkeyid</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="n">var_dump</span><span class="p">(</span><span class="err">$</span><span class="n">verify</span><span class="p">);</span>
  <span class="o">?&gt;</span></code></pre></div>
  
  
  <h2>Find the codes</h2>
  
  <p>The key functions are openssl_pkey_get_public and openssl_verify in the codes above mentioned.</p>
  
  <p>Go to the newest php source codes, <a href="https://github.com/php/php-src/blob/80f91fd9d513b83ca88345a2a8c76523e0164789/ext/openssl/openssl.c">https://github.com/php/php-src/blob/80f91fd9d513b83ca88345a2a8c76523e0164789/ext/openssl/openssl.c</a></p>
  
  <p>Dont ask me how to find the file.You can search the file in a project at Github.</p>
  
  <p>Ignore all the codes start with zval and zend.Go to the codes which include the key functions.</p>
  
  <p>And then there is the key header file:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="cm">/* OpenSSL includes */</span>
  <span class="cp">#include &lt;openssl/evp.h&gt;</span>
  <span class="cp">#include &lt;openssl/bn.h&gt;</span>
  <span class="cp">#include &lt;openssl/rsa.h&gt;</span>
  <span class="cp">#include &lt;openssl/dsa.h&gt;</span>
  <span class="cp">#include &lt;openssl/dh.h&gt;</span>
  <span class="cp">#include &lt;openssl/x509.h&gt;</span>
  <span class="cp">#include &lt;openssl/x509v3.h&gt;</span>
  <span class="cp">#include &lt;openssl/crypto.h&gt;</span>
  <span class="cp">#include &lt;openssl/pem.h&gt;</span>
  <span class="cp">#include &lt;openssl/err.h&gt;</span>
  <span class="cp">#include &lt;openssl/conf.h&gt;</span>
  <span class="cp">#include &lt;openssl/rand.h&gt;</span>
  <span class="cp">#include &lt;openssl/ssl.h&gt;</span>
  <span class="cp">#include &lt;openssl/pkcs12.h&gt;</span></code></pre></div>
  
  
  <p>The key codes generated pkey:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">key</span> <span class="o">=</span> <span class="n">PEM_read_bio_PrivateKey</span><span class="p">(</span><span class="n">in</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">passphrase</span><span class="p">);</span></code></pre></div>
  
  
  <p>The core logic:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">EVP_VerifyInit</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="n">mdtype</span><span class="p">);</span>
      <span class="n">EVP_VerifyUpdate</span> <span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">data_len</span><span class="p">);</span>
      <span class="n">err</span> <span class="o">=</span> <span class="n">EVP_VerifyFinal</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="n">signature</span><span class="p">,</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span><span class="p">)</span><span class="n">signature_len</span><span class="p">,</span> <span class="n">pkey</span><span class="p">);</span>
      <span class="n">EVP_MD_CTX_cleanup</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">);</span>
  
      <span class="k">if</span> <span class="p">(</span><span class="n">keyresource</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
          <span class="n">EVP_PKEY_free</span><span class="p">(</span><span class="n">pkey</span><span class="p">);</span>
      <span class="p">}</span></code></pre></div>
  
  
  <p>All of the codes are ready,cant you copy?</p>
  
  <h2>Final</h2>
  
  <p>It is easy to merge the codes above mentioned.</p>
  
  <p>To get the codes faster for any other people,there are the codes about  play Ras verifying:</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="kt">int</span> <span class="nf">verifiedByRsaPublicKey</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">publicKey</span><span class="p">,</span> <span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">signature</span><span class="p">,</span> <span class="kt">char</span><span class="o">*</span> <span class="n">message</span><span class="p">)</span> <span class="p">{</span>
      <span class="kt">char</span> <span class="o">*</span><span class="n">chPublicKey</span> <span class="o">=</span> <span class="n">const_cast</span><span class="o">&lt;</span><span class="kt">char</span> <span class="o">*&gt;</span><span class="p">(</span><span class="n">publicKey</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>
  
      <span class="n">BIO</span><span class="o">*</span> <span class="n">mem_bio</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">((</span><span class="n">mem_bio</span> <span class="o">=</span> <span class="n">BIO_new_mem_buf</span><span class="p">(</span><span class="n">chPublicKey</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">))</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>        <span class="c1">//从字符串读取RSA公钥</span>
          <span class="n">BIO_free</span><span class="p">(</span><span class="n">mem_bio</span><span class="p">);</span>
          <span class="k">return</span> <span class="o">-</span><span class="mi">3</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="n">EVP_PKEY</span> <span class="o">*</span><span class="n">publicRsa</span> <span class="o">=</span> <span class="n">PEM_read_bio_PUBKEY</span><span class="p">(</span><span class="n">mem_bio</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
      <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">slen</span> <span class="o">=</span> <span class="n">signature</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>
  
      <span class="n">EVP_MD_CTX</span> <span class="n">md_ctx</span><span class="p">;</span>
      <span class="n">EVP_VerifyInit</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="n">EVP_sha1</span><span class="p">());</span>
      <span class="n">EVP_VerifyUpdate</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">message</span><span class="p">));</span>
      <span class="kt">int</span> <span class="n">err</span> <span class="o">=</span> <span class="n">EVP_VerifyFinal</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">,</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span><span class="o">*</span><span class="p">)</span> <span class="n">signature</span><span class="p">.</span><span class="n">data</span><span class="p">(),</span> <span class="n">slen</span><span class="p">,</span> <span class="n">publicRsa</span><span class="p">);</span>
      <span class="n">EVP_MD_CTX_cleanup</span><span class="p">(</span><span class="o">&amp;</span><span class="n">md_ctx</span><span class="p">);</span>
      <span class="n">EVP_PKEY_free</span><span class="p">(</span><span class="n">publicRsa</span><span class="p">);</span>
      <span class="k">return</span> <span class="n">err</span><span class="p">;</span>
  <span class="p">}</span></code></pre></div>
  
  
  <h2>Conclusion</h2>
  
  <p>Is is a good solution for c/c++ developer.You can find the answer in php at first,go to see the c source codes of php at last.</p>
  
  <p><input type="hidden" id="mid" name="mid" value="3979354272598736" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[在c/c++中解决SHA1WithRSA/ras/X509的过程记录]]></title>
              <link>https://www.54chen.com/blog/2016/05/25/a-story-about-sha1withrsa-slash-ras-slash-x509-with-c-slash-c-plus-plus/</link>
              <pubDate>2016-05-25T12:13:25+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/05/25/a-story-about-sha1withrsa-slash-ras-slash-x509-with-c-slash-c-plus-plus</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>2010年的时候，我们开始最早的一波做小米的服务器的同学，基本都很少互联网经验，七拼八凑的把米聊上了线，这么多年过去了，很多技术框架沉淀到了公司各处团队中去了。</p>
  
  <p>今天再来看，其实有很多细节，当时真的没考虑（现在也是坑）。</p>
  
  <p><img src=http://www.oracle.com/technetwork/java/javaspotlight-189455.png></p>
  
  <!--more-->
  
  
  <h2>细节一 用nginx的proxy_pass代理java上线不平滑</h2>
  
  <p>一个典型的架子，是nginx+resin/tomcat，然后在nginx上设置weight=1 max_fails=3 等等。</p>
  
  <p>在上线的时候，并没有平滑过度的手段（比如修改一下所有nginx配置拿掉一台之类的），所有的上线都是有损的。</p>
  
  <p>庆幸的是，移动互联网native的app，断个一两秒的不服务用户感觉不出来。</p>
  
  <h2>细节二 监控数据很多，有用的很少</h2>
  
  <p>线上故障的情况，不出意外就是一个模块和另一个模块之间发生了什么问题。</p>
  
  <p>过去的几年，我们始终没考虑过抽象出来这种数据。</p>
  
  <p>我们的监控数据全部是以单独一个模块自身的访问数据（qps、响应时长等），常见的问题是别人说访问你慢，访问老失败，你自己一看数据觉得还挺好。</p>
  
  <h2>细节三 为android ios配备了http框架</h2>
  
  <p>如果当时没有paoding-rose，我想我们会考虑做成一个标准的tcp server，中间用pb传输到手机。</p>
  
  <p>这样做的好处，在应对不好的移动网络的时候，http束手束脚，而tcp却得多。</p>
  
  <p>这一点我同样要点名嘲笑一个微博的客户端，在一样的坑里。</p>
  
  <h2>细节四 选java又没有语言级专家</h2>
  
  <p>如果当时选的是php，我想我们线上的服务在很多年后需要重启的会很少（由于nio或者其他什么泄漏之类的，最后服务就假死了，重启就能管很长时间）。</p>
  
  <p>当然了，现在来看，更倾向于选c/c++，至少老老实实的写不会有太大的坑，跑起来也稳定。</p>
  
  <h2>细节五 过于依赖关系型数据库mysql</h2>
  
  <p>用mysql没有什么错，使用方便，实现业务快。</p>
  
  <p>在中期要做多IDC容灾的时候，没办法了，实在是关系太复杂了，做不了。</p>
  
  <p>如果当时我们全部有key-value的，将大量的mysql做的事情放在业务代码里来，做多IDC简直是小菜一碟。</p>
  
  <p>而多IDC在一个互联网业务来看，上量了之后又是多么重要的一件事情。</p>
  
  <h2>细节六 过多使用rabbitmq</h2>
  
  <p>在需要削峰的项目上使用mq无可厚非，但是一个项目到处都在用mq的时候，简直是灾难（想一想，一个大系统，调用谁不清楚，谁在调用也不清楚，只知道自己在消费什么对象）。</p>
  
  <p>后期的时候，要想知道一个模块正在被谁调用基本无从查询了，因为这些开源的mq，根本不会考虑实际运维中的需求，出发点全部是如何快速的使用。</p>
  
  <h2>后记</h2>
  
  <p>细节有点多，坑都还在(还有一些坑已经爬出来了就不列在这里了)，依旧有后继的团队和项目在坑里，如果一个项目立志要做大做强，还是一开始就跳出这些坑吧。</p>
  
  <hr />
  
  <h2>English version</h2>
  
  <h2>Something wrong in the pass six years at XIAOMI server</h2>
  
  <p>We deployed MILIAO server, which was a sketchy version patched together, in 2010.The first team members that developed at XIAOMI sever-side were less experience in the internet field.</p>
  
  <p>The techlonogy frameworks have broadcasted to every team in XIAOMI after all these years.</p>
  
  <p>And now for a look at the techlonogy details,it was thought too little at that time.</p>
  
  <h2>Detail 1.nginx&rsquo;s pass_proxy which proxied java server is not graceful when deploying </h2>
  
  <p>A typical case is nginx worked with resin or tomcat,and there is a configration like &lsquo;weight=1 max_fails=3&rsquo; in nginx.</p>
  
  <p>There is not graceful when deploying the service.We dont have any load-balance tool.</p>
  
  <p>It is a relief that the users do not know out of service at the native app.</p>
  
  <h2>Detail 2.too many traffic data,too less is useful</h2>
  
  <p>No surprisingly,there is something wrong between one model call another one when it is out of service online.</p>
  
  <p>We have not thought about the model-call traffice data in the pass years.</p>
  
  <p>We have too many data like QPS and percentile but all of them are made by the servce be called rather than the caller.</p>
  
  <p>One question that frequently comes up was that looks all good by data but not good by the caller.</p>
  
  <h2>Detail 3.http framework for Android and Ios</h2>
  
  <p>Without pading-rose framework,I think we would develop a tcp server,which transfer data by protobuffer.</p>
  
  <p>It is better for Chinese network enviroment,because the tcp one is more free than the http one.</p>
  
  <p>The Weibo app is also designed by http.</p>
  
  <h2>Detail 4.java without specialist</h2>
  
  <p>I think the service online is not need restarted now if we had choose php at that time.</p>
  
  <p>Now I prefer c/c++.It is less problem.</p>
  
  <h2>Detail 5.depended too much on RDBS</h2>
  
  <p>It is not wrong that a project is designed by mysql.It is easy and quick.</p>
  
  <p>But it is difficult when you want to take the service to multi-IDC.It is impossible.</p>
  
  <p>Mult-IDC is a easy thing,if we have designed the service by key-value store.The logic must be done in project rather than in mysql.</p>
  
  <p>This is so important when your project have became greater.</p>
  
  <h2>Detail 6.depended too much on rabbitmq</h2>
  
  <p>It is doesnot matter that a peakedness project is designed by mq.It must be a disaster that a usual project is designed by mq everywhere.</p>
  
  <p>It is difficult to find the calling relationship.</p>
  
  <h2>PS</h2>
  
  <p>There are too many details.To avoid the wrong thing if your service will be greater.</p>
  
  <p><input type="hidden" id="mid" name="mid" value="3968627038512109" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[过去六年在小米搞(wa)错(keng)的几个技术细节]]></title>
              <link>https://www.54chen.com/blog/2016/04/26/mistake-in-six-years/</link>
              <pubDate>2016-04-26T20:34:54+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/04/26/mistake-in-six-years</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p><img src=http://chen54.b0.upaiyun.com/css/write-code.jpg></p>
  
  <p>前些天看到了老板的二十年前的文章《程序人生》，地址在这里 <a href="http://t.cn/RqPJYHU">http://t.cn/RqPJYHU</a> ，深有感触，于是也萌发了写一写的想法，看看二十年后，自己的认识是否会有所改变，当然了，即便作为职业码农近十年，很多观点依然不能构成一种完整且保证正确的人生观。</p>
  
  <h2>题记</h2>
  
  <p>如果一定要用几个词来形容程序员的人生观，我想那应该是：坚定、乐观、冷静、钻研。</p>
  
  <h2>坚定</h2>
  
  <div class="highlight"><pre><code class="language-java" data-lang="java"><span class="c1">//如果不能坚定地知道自己喜欢计算机这个事情，早就干点别的什么去了，码农这个事情常人看来无味极了。</span></code></pre></div>
  
  
  <p>与上一辈程序员相比，时代留给这一辈的机会不同，裕兴、小霸王、步步高成为我们很早就启蒙计算机知识的最佳方式，从小学或者初中起，脑洞大开。</p>
  
  <p>在接触过的好朋友中，凡是从小接触计算机的，在初中高中已经基本可以完成一些诸如pascal\c\basic\asp之类的流行技能。他们大多干过如下的事情：1.做个人网站 2.帮教务处做报课系统 3.维护学校bbs（当然了，雷老板是这事情的鼻祖了） 4.接些外包小系统赚点外快。</p>
  
  <!--more-->
  
  
  <p>上述这些枯燥的事情中，每件事情，都需要投入极大的兴趣，不计得失，才能取得一点点的成就感。如果没有坚定的想法，多半都半途而废了。</p>
  
  <h2>乐观</h2>
  
  <div class="highlight"><pre><code class="language-java" data-lang="java"><span class="c1">//如果不是乐观的态度，早被遇到的困难和歧视折磨死了。</span></code></pre></div>
  
  
  <p>一个同学，在大连做外包行业的开发工作，毕业后干了两年到了结婚生子的年龄了，什么积蓄也没有，对整个行业失望至极，完全没有方向，回家随便找了个商场当起了销售员。</p>
  
  <p>比起老板阳春白雪的干上一辈子程序的想法，更多看到的是程序员还在温饱线上挣扎的现实。</p>
  
  <p>别说是国内流行的35岁前转管理岗这种说法，光是吃不饱一个问题，不够乐观的程序员，早就已经放弃了这个行业。</p>
  
  <p>对于乐观的人来说，这些都不是事。十年前我在金山实习的时候，工资才够付房租，吃饭还得想办法[笑cry]。</p>
  
  <h2>冷静</h2>
  
  <div class="highlight"><pre><code class="language-java" data-lang="java"><span class="c1">//遇到困难，冷静地战胜困难，是程序员的兴奋点。</span></code></pre></div>
  
  
  <p>有很多事情，程序员并不担心，这是思维上的习惯。</p>
  
  <p>曾经有过这样的同事，遇到bug找不出来，急得像热锅上的蚂蚁，思维已经完全顾不上想解决的办法，只剩下着急。</p>
  
  <p>如果不够冷静，只会让事情更糟。</p>
  
  <h2>钻研</h2>
  
  <div class="highlight"><pre><code class="language-java" data-lang="java"><span class="c1">//浪费一次调查到问题根本原因的机会，就是浪费生命。</span></code></pre></div>
  
  
  <p>这是职业习惯，许多时候程序员要靠这种钻研的过程来吸收新的知识。</p>
  
  <p>许多人反而容易放弃一次可以轻松得到的学习机会，认为很多问题出现了，可能是什么什么原因，然后就结束了。</p>
  
  <p>钻研的习惯要靠很多年才能养成，还要花费大量的时间和精力，要成为人生观的一项，很是艰难。</p>
  
  <p>但在程序员的人生观里，这都是很正常的事情。</p>
  
  <h2>结语</h2>
  
  <p>与老板的程序人生相比，本文主要是说的一个纯粹程序员的人生观。然而，要在社会立足，专业的程序员肯定不如专业的企业家或者小老板靠谱。</p>
  
  <p>所以，摆在程序员面前的两条路：1.用专业的程序员态度慢慢积累财富，离开这个，去物质丰富的发达继续程序人生。2.用我老板的程序人生思路，不要沉浸在程序员的世界里，抬头看看社会需要什么，约三五好友，完成需求，转而进入了"企业家程序人生"行列。</p>
  
  <p><input type="hidden" id="mid" name="mid" value="3957217407004979" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[54chen的程序人生]]></title>
              <link>https://www.54chen.com/blog/2016/03/26/my-code/</link>
              <pubDate>2016-03-26T08:03:08+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/03/26/my-code</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p><img src=http://img03.taobaocdn.com/imgextra/i3/T1.1RSXmRfXXXjG9sV_021627.jpg alt=c></p>
  
  <p>在c++中使用protobuf的时候，大多数元素，我们可以直接set_xxx，如果有嵌套进去一个对象，会有set_allocated_xxx的方法和mutable_xxx的方法。</p>
  
  <p>这里有一个坑。</p>
  
  <h2>现象</h2>
  
  <p>首先，看pb定义：</p>
  
  <!--more-->
  
  
  
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">package</span> <span class="n">test</span><span class="p">;</span>
  <span class="n">message</span> <span class="n">a</span><span class="p">{</span>
      <span class="n">required</span> <span class="n">uint32</span> <span class="n">aa</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span>
  
  <span class="n">message</span> <span class="n">b</span><span class="p">{</span>
      <span class="n">required</span> <span class="n">a</span> <span class="n">aaa</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
  <span class="p">}</span></code></pre></div>
  
  
  <p>如果使用set_allocated_aaa，同时传入了一个定义好的a，而不是new的a，如下：</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="kt">void</span> <span class="nf">bad_case</span><span class="p">(){</span>
      <span class="n">a</span> <span class="n">aa</span><span class="p">;</span>
      <span class="n">b</span> <span class="n">bb</span><span class="p">;</span>
      <span class="n">aa</span><span class="p">.</span><span class="n">set_aa</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
      <span class="n">bb</span><span class="p">.</span><span class="n">set_allocated_aaa</span><span class="p">(</span><span class="o">&amp;</span><span class="n">aa</span><span class="p">);</span>
  <span class="p">}</span></code></pre></div>
  
  
  <p>编译的时候不会有错误，一运行就出问题了：</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="o">***</span> <span class="n">glibc</span> <span class="n">detected</span> <span class="o">***</span> <span class="p">.</span><span class="o">/</span><span class="n">test</span><span class="p">.</span><span class="nl">run</span><span class="p">:</span> <span class="kt">double</span> <span class="n">free</span> <span class="n">or</span> <span class="n">corruption</span> <span class="p">(</span><span class="n">out</span><span class="p">)</span><span class="o">:</span> <span class="mh">0x00007fffc65ade20</span> <span class="o">***</span></code></pre></div>
  
  
  <h2>正确的写法</h2>
  
  <p>下面的写法，不会有问题：</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="kt">int</span> <span class="nf">good_case1</span><span class="p">(){</span>
      <span class="n">a</span><span class="o">*</span> <span class="n">aa</span> <span class="o">=</span> <span class="n">new</span> <span class="n">a</span><span class="p">();</span>
      <span class="n">b</span> <span class="n">bb</span><span class="p">;</span>
      <span class="n">aa</span><span class="o">-&gt;</span><span class="n">set_aa</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
      <span class="n">bb</span><span class="p">.</span><span class="n">set_allocated_aaa</span><span class="p">(</span><span class="n">aa</span><span class="p">);</span>
      <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
  <span class="p">}</span></code></pre></div>
  
  
  <p>下面的写法，也不会有问题：</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="kt">void</span> <span class="nf">good_case2</span><span class="p">(){</span>
      <span class="n">a</span> <span class="n">aa</span><span class="p">;</span>
      <span class="n">b</span> <span class="n">bb</span><span class="p">;</span>
      <span class="n">aa</span><span class="p">.</span><span class="n">set_aa</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
      <span class="n">bb</span><span class="p">.</span><span class="n">mutable_aaa</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">MergeFrom</span><span class="p">(</span><span class="n">aa</span><span class="p">);</span>
  <span class="p">}</span></code></pre></div>
  
  
  <h2>原因</h2>
  
  <p>在pb生成的对象中，析构函数统一都要进行对象的delete作：</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="n">b</span><span class="o">::~</span><span class="n">b</span><span class="p">()</span> <span class="p">{</span>
    <span class="c1">// @@protoc_insertion_point(destructor:test.b)</span>
    <span class="n">SharedDtor</span><span class="p">();</span>
  <span class="p">}</span>
  
  <span class="kt">void</span> <span class="n">b</span><span class="o">::</span><span class="n">SharedDtor</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">this</span> <span class="o">!=</span> <span class="n">default_instance_</span><span class="p">)</span> <span class="p">{</span>
      <span class="n">delete</span> <span class="n">aaa_</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span></code></pre></div>
  
  
  <p>通过定义得到的一个变量，只在栈上临时生成，在函数生命周期后自动清理，而将地址给了一个pb后，执行结束时会进行手动delete，从而导致了double free。</p>
  
  <p>通过new得到的一个对象，放在堆上，手动delete才会清理。</p>
  
  <p>good_case2正确的原因，是因为mutable_aaa的代码里new了一个a。</p>
  
  <div class="highlight"><pre><code class="language-c" data-lang="c"><span class="kr">inline</span> <span class="o">::</span><span class="n">test</span><span class="o">::</span><span class="n">a</span><span class="o">*</span> <span class="n">b</span><span class="o">::</span><span class="n">mutable_aaa</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">set_has_aaa</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">aaa_</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="n">aaa_</span> <span class="o">=</span> <span class="n">new</span> <span class="o">::</span><span class="n">test</span><span class="o">::</span><span class="n">a</span><span class="p">;</span>
    <span class="c1">// @@protoc_insertion_point(field_mutable:test.b.aaa)</span>
    <span class="k">return</span> <span class="n">aaa_</span><span class="p">;</span>
  <span class="p">}</span></code></pre></div>
  
  
  <h2>结论</h2>
  
  <p>使用pb的set_allocated_xxx要小心，没有显式allocate的东西不要往里传。</p>
  
  <p>文中涉及的代码地址：<a href="https://github.com/54chen/test">https://github.com/54chen/test</a></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[c++ protobuf中set_allocated引起的double free core dump]]></title>
              <link>https://www.54chen.com/blog/2016/03/24/protobuf-double-free/</link>
              <pubDate>2016-03-24T16:09:04+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/03/24/protobuf-double-free</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p>马上过年了，先祝大家新快乐、万事如意！</p>
  
  <p><img src=http://img02.taobaocdn.com/imgextra/i2/T1o7d4XgVmXXa0tYUU_013741.jpg></p>
  
  <p>一群错综复杂的服务，如何去衡量质量，如何去快速找到问题，如何每个环节都有“眼线”？</p>
  
  <!--more-->
  
  
  <h1>一、抽象的数据</h1>
  
  <p>yammer的metrics项目，可能算是大家用得最多的一个了，可以算qps，可以算99.9％的请求时长。</p>
  
  <p>这些在线上故障的发现和定位有用吗？够用吗？</p>
  
  <p>通过线上的事故积累，答案是，故障的发现，仅通过一个qps和percentile的绝对值来报警，误报非常高，真正的故障往往被掩盖。:(</p>
  
  <p>经过前辈们的探索，下面的实践的确是最佳的：</p>
  
  <p>1.服务抽象为主调方和被调方。</p>
  
  <p>2.提前商定好超时，以一分钟为单位计算成功率。</p>
  
  <p>3.连续三分钟的成功率低于三个九，报警。</p>
  
  <p>实践中从来没有误报过。:)</p>
  
  <h1>二、抽象的返回</h1>
  
  <p>服务在告诉监控系统成功率的时候，随带就告诉了系统，是因为1（超时）、2（用户不存在）、3（xx服务不响应）、4（存储异常）等等。</p>
  
  <p>出现故障的时候，报警直接会告诉你，“90％原因是超时”，连服务器上的日志都不用去看！</p>
  
  <h1>三、抽象的调查过程</h1>
  
  <p>通过抽象的数据，我们可以再按照每天的成功率进行统计，“天三个九”的要求会低于“分钟三个九”（不信你算一下）。</p>
  
  <p>日报里大致会标出 A->B 99.1%  B->C 98.9%  C->D 99%，很明显了，D服务有问题了，导致上面每一层都有问题。</p>
  
  <p>再单独看C->D抽象返回的结果统计，1占88% 2占1%等等，定位为超时原因。</p>
  
  <p>然后看看具体出问题的时间点是否有其他的异常日志，如果没有，则是需要扩容了（增加处理线程OR增加机器）。</p>
  
  <h1>四、抽象的总结</h1>
  
  <p>文中系统真实存在，童叟无欺，实现简单并未开源，小米同学可以使用，如有欲望邮件联系我。</p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[服务质量衡量抽象心经]]></title>
              <link>https://www.54chen.com/blog/2016/02/02/service-memo/</link>
              <pubDate>2016-02-02T10:30:54+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2016/02/02/service-memo</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
          <item>
              <description>
                  <![CDATA[
  <a href="http://www.54chen.com"><img border="0" src="/images/54chen-logo.gif"></a><br>以下内容由<a href="http://www.54chen.com">[五四陈科学院]</a>提供<br>
                  <p><img src=http://img03.taobaocdn.com/imgextra/i3/T13gR3Xa4cXXcFX9c3_050845.jpg></p>
  
  <p>  2015年，是一直在学习的一年，来自腾讯小伙伴们的多年经验要在一年里吸收，包括方式方法技术方案，着实不是一件容易的事情。</p>
  
  <p>  在这一年大部分时间，都在围绕着用户的网络问题进行着努力，让问题从出现到解决成为闭环，环环相扣，直到找不到漏洞所在。</p>
  
  <p>  汇总一句话，2015是充实忙碌的一年，也是完全解开了前三年的一些技术疑问的一年。</p>
  
  <!--more-->
  
  
  <p> 生活方面，这一年搬了新家，学习了装修的过程，端午在在塞班了解了一下苦逼的帝国人民都是如何浪费生命的，年底又去了一趟大连办档案，然后在小米满了五年，签了第一份无固定期劳动合同。</p>
  
  <p><b>展望2016，可能会有以下十件大事：</b></p>
  
  <p>1.阿黎应该是要回来小米了。</p>
  
  <p>2.服务器行业应该不会出现啥大的热门技术了。</p>
  
  <p>3.的移动网络可能会有改善。</p>
  
  <p>4.c/s结构的好用的框架开始出现。</p>
  
  <p>5.进入资本冬天，各种小公司不好融资。</p>
  
  <p>6.国内的污染进一步加剧。</p>
  
  <p>7.安全生产事故再一次出现。</p>
  
  <p>8.造开始追求品质。</p>
  
  <p>9.更多的有钱人。</p>
  
  <p>10.人民币汇率到7。</p>
  
  <p>明年见！</p>
  
  <p><input type="hidden" id="mid" name="mid" value="3926176374114237" /></p>
  
  <br>想快点找到作者也可以到weibo上留言: <a href="https://www.weibo.com/54chen" target="_blank">@54chen</a><br>或者你懒得带上，请到新浪微博：<a href="http://t.sina.com.cn/54chen" target="_blank">@54chen</a>
                  ]]>
              </description>
              <title><![CDATA[8182015年总结和2016年预测]]></title>
              <link>https://www.54chen.com/blog/2015/12/31/2015-2016/</link>
              <pubDate>2015-12-31T16:29:11+08:00</pubDate>
              <guid isPermaLink="false">https://www.54chen.com/blog/2015/12/31/2015-2016</guid>
  
              <source url="https://www.54chen.com/rss.xml"><![CDATA[五四陈科学院]]></source>
          </item>
          
      </channel>
  </rss>
